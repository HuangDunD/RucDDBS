syntax="proto3";
package session;

option cc_generic_services = true;

// 客户和节点之间通信
// 客户将sql发给节点，节点处理后返回一个关系表

message Value{
    string tab_name = 1;
    string col_name = 2;
    sint32 value = 3;
};

message Tuple{
    repeated Value tuple = 1;
}

message Col{
    string tab_name = 1;
    string col_name = 2;
}

message Table{
    repeated Tuple table = 2;
}

message SQL_Request{
    string Sql_statement = 1;
    sint64 txn_id = 2;
};

message SQL_Response{
    string txt = 1;
    sint64 txn_id = 2;
};

// 节点和节点通信
// 节点收到一个执行计划，节点执行后，将结果返回
message Expression {
    string str_expression = 1;
}

message Expr{
    oneof exp{
        Value val = 1;
        Col col = 2;
    }
}

message BinaryMessage{
    Col col = 1;
    sint32 op = 2;
    Expr exp = 3;
}

message ChildPlan {
    oneof child_plan{
        SeqScanPlan seq_scan_plan = 1;
        FilterPlan filter_plan = 2;
        ProjectionPlan project_plan = 3;
        InsertPlan insert_plan = 4;
        DeletePlan delete_plan = 5;
        UpdatePlan update_plan = 6;
        NestedLoopJoin nestedloop_join_plan = 7;
        ValuePlan value_plan = 8;
        TableGetPlan table_get_pan = 9;
        DistributedPlan distributed_plan = 10;
    }
}

//Insert用, 构建Value tuple
message ValuePlan {
    repeated string value = 2;
};


//扫描分区计划
message SeqScanPlan {
    string db_name = 1;
    string tab_name = 2;
    sint32 par_id = 3;
    repeated ChildPlan child = 4;
}

//获取key值
message TableGetPlan {
    string db_name = 1;
    string tab_name = 2;
    sint32 par_id = 3;
    string key = 4;
    repeated ChildPlan child = 5;
}

//过滤器
message FilterPlan {
    BinaryMessage conds = 1;
    repeated ChildPlan child = 2;
}

//插入
message InsertPlan {
    string db_name = 1;
    string tab_name = 2;
    sint32 par_id = 3;
    repeated string col_name = 4;
    repeated sint32 val =5;
    repeated ChildPlan child = 6; 
}

//删除
message DeletePlan {
    string db_name = 1;
    string tab_name = 2;
    sint32 par_id = 3;
    repeated ChildPlan child = 4;
}

//更新
message UpdatePlan {
    string db_name = 1;
    string tab_name = 2;
    sint32 par_id = 3;
    repeated sint32 set_col_index = 4;
    repeated sint32 set_val = 5;
    repeated ChildPlan child = 6;
}

//投影
message ProjectionPlan {
    string tab_name = 1;
    repeated string col_name = 2;
    repeated ChildPlan child = 3;
}

enum JoinType {
    INVALID = 0;
    LEFT = 1;
    RIGHT = 3;
    INNER = 4;
    OUTER = 5;
};

//嵌套循环
message NestedLoopJoin {
    JoinType jointype = 1;
    repeated ChildPlan child = 2;
}

//分布式执行计划
message DistributedPlan {
    message Node {
        string ip_addr = 1;
        sint32 port = 2;
        // ChildPlan child = 3;
    }
    repeated Node nodes = 1;
    repeated ChildPlan plans = 2;
}

message RemotePlan {
    ChildPlan child = 1;
}

service Session_Service{
    rpc SQL_Transfer(SQL_Request) returns (SQL_Response);
    rpc SendRemotePlan(RemotePlan) returns (Table);
};