// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: session.proto

#include "session.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_session_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_session_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Col;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_session_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DistributedPlan_Node;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_session_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Value;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_session_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ValuePlan;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_session_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Table;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_session_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Tuple;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_session_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_BinaryMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_session_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Expr;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_session_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_ChildPlan;
}  // namespace protobuf_session_2eproto
namespace session {
class ValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Value>
      _instance;
} _Value_default_instance_;
class TupleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Tuple>
      _instance;
} _Tuple_default_instance_;
class TableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Table>
      _instance;
} _Table_default_instance_;
class SQL_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SQL_Request>
      _instance;
} _SQL_Request_default_instance_;
class SQL_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SQL_Response>
      _instance;
} _SQL_Response_default_instance_;
class ExpressionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression>
      _instance;
} _Expression_default_instance_;
class ColDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Col>
      _instance;
} _Col_default_instance_;
class ExprDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expr>
      _instance;
  const ::session::Value* val_;
  const ::session::Col* col_;
} _Expr_default_instance_;
class BinaryMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BinaryMessage>
      _instance;
} _BinaryMessage_default_instance_;
class ChildPlanDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChildPlan>
      _instance;
  const ::session::SeqScanPlan* seq_scan_plan_;
  const ::session::FilterPlan* filter_plan_;
  const ::session::ProjectionPlan* project_plan_;
  const ::session::InsertPlan* insert_plan_;
  const ::session::DeletePlan* delete_plan_;
  const ::session::UpdatePlan* update_plan_;
  const ::session::NestedLoopJoin* nestedloop_join_plan_;
  const ::session::ValuePlan* value_plan_;
  const ::session::TableGetPlan* table_get_pan_;
  const ::session::DistributedPlan* distributed_plan_;
} _ChildPlan_default_instance_;
class ValuePlanDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValuePlan>
      _instance;
} _ValuePlan_default_instance_;
class SeqScanPlanDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SeqScanPlan>
      _instance;
} _SeqScanPlan_default_instance_;
class TableGetPlanDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TableGetPlan>
      _instance;
} _TableGetPlan_default_instance_;
class FilterPlanDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FilterPlan>
      _instance;
} _FilterPlan_default_instance_;
class InsertPlanDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InsertPlan>
      _instance;
} _InsertPlan_default_instance_;
class DeletePlanDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeletePlan>
      _instance;
} _DeletePlan_default_instance_;
class UpdatePlanDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdatePlan>
      _instance;
} _UpdatePlan_default_instance_;
class ProjectionPlanDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProjectionPlan>
      _instance;
} _ProjectionPlan_default_instance_;
class NestedLoopJoinDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NestedLoopJoin>
      _instance;
} _NestedLoopJoin_default_instance_;
class DistributedPlan_NodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DistributedPlan_Node>
      _instance;
} _DistributedPlan_Node_default_instance_;
class DistributedPlanDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DistributedPlan>
      _instance;
} _DistributedPlan_default_instance_;
class RemotePlanDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemotePlan>
      _instance;
} _RemotePlan_default_instance_;
}  // namespace session
namespace protobuf_session_2eproto {
static void InitDefaultsValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::session::_Value_default_instance_;
    new (ptr) ::session::Value();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::session::Value::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Value =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValue}, {}};

static void InitDefaultsTuple() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::session::_Tuple_default_instance_;
    new (ptr) ::session::Tuple();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::session::Tuple::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Tuple =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTuple}, {
      &protobuf_session_2eproto::scc_info_Value.base,}};

static void InitDefaultsTable() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::session::_Table_default_instance_;
    new (ptr) ::session::Table();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::session::Table::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Table =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTable}, {
      &protobuf_session_2eproto::scc_info_Tuple.base,}};

static void InitDefaultsSQL_Request() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::session::_SQL_Request_default_instance_;
    new (ptr) ::session::SQL_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::session::SQL_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SQL_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSQL_Request}, {}};

static void InitDefaultsSQL_Response() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::session::_SQL_Response_default_instance_;
    new (ptr) ::session::SQL_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::session::SQL_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SQL_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSQL_Response}, {
      &protobuf_session_2eproto::scc_info_Table.base,}};

static void InitDefaultsExpression() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::session::_Expression_default_instance_;
    new (ptr) ::session::Expression();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::session::Expression::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Expression =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExpression}, {}};

static void InitDefaultsCol() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::session::_Col_default_instance_;
    new (ptr) ::session::Col();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::session::Col::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Col =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCol}, {}};

static void InitDefaultsExpr() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::session::_Expr_default_instance_;
    new (ptr) ::session::Expr();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::session::Expr::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Expr =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsExpr}, {
      &protobuf_session_2eproto::scc_info_Value.base,
      &protobuf_session_2eproto::scc_info_Col.base,}};

static void InitDefaultsBinaryMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::session::_BinaryMessage_default_instance_;
    new (ptr) ::session::BinaryMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::session::BinaryMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_BinaryMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsBinaryMessage}, {
      &protobuf_session_2eproto::scc_info_Col.base,
      &protobuf_session_2eproto::scc_info_Expr.base,}};

static void InitDefaultsChildPlan() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::session::_ChildPlan_default_instance_;
    new (ptr) ::session::ChildPlan();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::session::_SeqScanPlan_default_instance_;
    new (ptr) ::session::SeqScanPlan();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::session::_TableGetPlan_default_instance_;
    new (ptr) ::session::TableGetPlan();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::session::_FilterPlan_default_instance_;
    new (ptr) ::session::FilterPlan();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::session::_InsertPlan_default_instance_;
    new (ptr) ::session::InsertPlan();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::session::_DeletePlan_default_instance_;
    new (ptr) ::session::DeletePlan();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::session::_UpdatePlan_default_instance_;
    new (ptr) ::session::UpdatePlan();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::session::_ProjectionPlan_default_instance_;
    new (ptr) ::session::ProjectionPlan();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::session::_NestedLoopJoin_default_instance_;
    new (ptr) ::session::NestedLoopJoin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::session::_DistributedPlan_default_instance_;
    new (ptr) ::session::DistributedPlan();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::session::ChildPlan::InitAsDefaultInstance();
  ::session::SeqScanPlan::InitAsDefaultInstance();
  ::session::TableGetPlan::InitAsDefaultInstance();
  ::session::FilterPlan::InitAsDefaultInstance();
  ::session::InsertPlan::InitAsDefaultInstance();
  ::session::DeletePlan::InitAsDefaultInstance();
  ::session::UpdatePlan::InitAsDefaultInstance();
  ::session::ProjectionPlan::InitAsDefaultInstance();
  ::session::NestedLoopJoin::InitAsDefaultInstance();
  ::session::DistributedPlan::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ChildPlan =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsChildPlan}, {
      &protobuf_session_2eproto::scc_info_ValuePlan.base,
      &protobuf_session_2eproto::scc_info_DistributedPlan_Node.base,
      &protobuf_session_2eproto::scc_info_BinaryMessage.base,}};

static void InitDefaultsValuePlan() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::session::_ValuePlan_default_instance_;
    new (ptr) ::session::ValuePlan();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::session::ValuePlan::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ValuePlan =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValuePlan}, {}};

static void InitDefaultsDistributedPlan_Node() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::session::_DistributedPlan_Node_default_instance_;
    new (ptr) ::session::DistributedPlan_Node();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::session::DistributedPlan_Node::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DistributedPlan_Node =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDistributedPlan_Node}, {}};

static void InitDefaultsRemotePlan() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::session::_RemotePlan_default_instance_;
    new (ptr) ::session::RemotePlan();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::session::RemotePlan::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RemotePlan =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRemotePlan}, {
      &protobuf_session_2eproto::scc_info_ChildPlan.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Value.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Tuple.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Table.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SQL_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SQL_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Expression.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Col.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Expr.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BinaryMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChildPlan.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ValuePlan.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DistributedPlan_Node.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RemotePlan.base);
}

::google::protobuf::Metadata file_level_metadata[22];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::Value, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::Value, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::Tuple, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::Tuple, tuple_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::Table, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::Table, table_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::SQL_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::SQL_Request, sql_statement_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::SQL_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::SQL_Response, sql_response_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::Expression, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::Expression, str_expression_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::Col, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::Col, tab_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::Col, col_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::Expr, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::Expr, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::session::ExprDefaultTypeInternal, val_),
  offsetof(::session::ExprDefaultTypeInternal, col_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::Expr, exp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::BinaryMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::BinaryMessage, col_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::BinaryMessage, op_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::BinaryMessage, exp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::ChildPlan, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::ChildPlan, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::session::ChildPlanDefaultTypeInternal, seq_scan_plan_),
  offsetof(::session::ChildPlanDefaultTypeInternal, filter_plan_),
  offsetof(::session::ChildPlanDefaultTypeInternal, project_plan_),
  offsetof(::session::ChildPlanDefaultTypeInternal, insert_plan_),
  offsetof(::session::ChildPlanDefaultTypeInternal, delete_plan_),
  offsetof(::session::ChildPlanDefaultTypeInternal, update_plan_),
  offsetof(::session::ChildPlanDefaultTypeInternal, nestedloop_join_plan_),
  offsetof(::session::ChildPlanDefaultTypeInternal, value_plan_),
  offsetof(::session::ChildPlanDefaultTypeInternal, table_get_pan_),
  offsetof(::session::ChildPlanDefaultTypeInternal, distributed_plan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::ChildPlan, child_plan_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::ValuePlan, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::ValuePlan, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::SeqScanPlan, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::SeqScanPlan, db_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::SeqScanPlan, tab_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::SeqScanPlan, par_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::SeqScanPlan, child_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::TableGetPlan, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::TableGetPlan, db_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::TableGetPlan, tab_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::TableGetPlan, par_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::TableGetPlan, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::TableGetPlan, child_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::FilterPlan, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::FilterPlan, conds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::FilterPlan, child_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::InsertPlan, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::InsertPlan, db_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::InsertPlan, tab_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::InsertPlan, par_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::InsertPlan, col_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::InsertPlan, val_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::InsertPlan, child_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::DeletePlan, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::DeletePlan, db_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::DeletePlan, tab_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::DeletePlan, par_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::DeletePlan, child_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::UpdatePlan, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::UpdatePlan, db_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::UpdatePlan, tab_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::UpdatePlan, par_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::UpdatePlan, set_col_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::UpdatePlan, set_val_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::UpdatePlan, child_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::ProjectionPlan, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::ProjectionPlan, tab_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::ProjectionPlan, col_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::ProjectionPlan, child_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::NestedLoopJoin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::NestedLoopJoin, jointype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::NestedLoopJoin, child_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::DistributedPlan_Node, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::DistributedPlan_Node, ip_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::DistributedPlan_Node, port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::DistributedPlan, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::DistributedPlan, nodes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::DistributedPlan, plans_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::RemotePlan, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::session::RemotePlan, child_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::session::Value)},
  { 6, -1, sizeof(::session::Tuple)},
  { 12, -1, sizeof(::session::Table)},
  { 18, -1, sizeof(::session::SQL_Request)},
  { 24, -1, sizeof(::session::SQL_Response)},
  { 30, -1, sizeof(::session::Expression)},
  { 36, -1, sizeof(::session::Col)},
  { 43, -1, sizeof(::session::Expr)},
  { 51, -1, sizeof(::session::BinaryMessage)},
  { 59, -1, sizeof(::session::ChildPlan)},
  { 75, -1, sizeof(::session::ValuePlan)},
  { 81, -1, sizeof(::session::SeqScanPlan)},
  { 90, -1, sizeof(::session::TableGetPlan)},
  { 100, -1, sizeof(::session::FilterPlan)},
  { 107, -1, sizeof(::session::InsertPlan)},
  { 118, -1, sizeof(::session::DeletePlan)},
  { 127, -1, sizeof(::session::UpdatePlan)},
  { 138, -1, sizeof(::session::ProjectionPlan)},
  { 146, -1, sizeof(::session::NestedLoopJoin)},
  { 153, -1, sizeof(::session::DistributedPlan_Node)},
  { 160, -1, sizeof(::session::DistributedPlan)},
  { 167, -1, sizeof(::session::RemotePlan)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::session::_Value_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::session::_Tuple_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::session::_Table_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::session::_SQL_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::session::_SQL_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::session::_Expression_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::session::_Col_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::session::_Expr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::session::_BinaryMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::session::_ChildPlan_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::session::_ValuePlan_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::session::_SeqScanPlan_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::session::_TableGetPlan_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::session::_FilterPlan_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::session::_InsertPlan_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::session::_DeletePlan_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::session::_UpdatePlan_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::session::_ProjectionPlan_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::session::_NestedLoopJoin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::session::_DistributedPlan_Node_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::session::_DistributedPlan_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::session::_RemotePlan_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "session.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 22);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rsession.proto\022\007session\"\026\n\005Value\022\r\n\005val"
      "ue\030\003 \001(\021\"&\n\005Tuple\022\035\n\005tuple\030\001 \003(\0132\016.sessi"
      "on.Value\"&\n\005Table\022\035\n\005table\030\001 \003(\0132\016.sessi"
      "on.Tuple\"$\n\013SQL_Request\022\025\n\rSql_statement"
      "\030\001 \001(\t\"4\n\014SQL_Response\022$\n\014Sql_response\030\001"
      " \001(\0132\016.session.Table\"$\n\nExpression\022\026\n\016st"
      "r_expression\030\001 \001(\t\")\n\003Col\022\020\n\010tab_name\030\001 "
      "\001(\t\022\020\n\010col_name\030\002 \001(\t\"I\n\004Expr\022\035\n\003val\030\001 \001"
      "(\0132\016.session.ValueH\000\022\033\n\003col\030\002 \001(\0132\014.sess"
      "ion.ColH\000B\005\n\003exp\"R\n\rBinaryMessage\022\031\n\003col"
      "\030\001 \001(\0132\014.session.Col\022\n\n\002op\030\002 \001(\021\022\032\n\003exp\030"
      "\003 \001(\0132\r.session.Expr\"\362\003\n\tChildPlan\022-\n\rse"
      "q_scan_plan\030\001 \001(\0132\024.session.SeqScanPlanH"
      "\000\022*\n\013filter_plan\030\002 \001(\0132\023.session.FilterP"
      "lanH\000\022/\n\014project_plan\030\003 \001(\0132\027.session.Pr"
      "ojectionPlanH\000\022*\n\013insert_plan\030\004 \001(\0132\023.se"
      "ssion.InsertPlanH\000\022*\n\013delete_plan\030\005 \001(\0132"
      "\023.session.DeletePlanH\000\022*\n\013update_plan\030\006 "
      "\001(\0132\023.session.UpdatePlanH\000\0227\n\024nestedloop"
      "_join_plan\030\007 \001(\0132\027.session.NestedLoopJoi"
      "nH\000\022(\n\nvalue_plan\030\010 \001(\0132\022.session.ValueP"
      "lanH\000\022.\n\rtable_get_pan\030\t \001(\0132\025.session.T"
      "ableGetPlanH\000\0224\n\020distributed_plan\030\n \001(\0132"
      "\030.session.DistributedPlanH\000B\014\n\nchild_pla"
      "n\"\032\n\tValuePlan\022\r\n\005value\030\002 \003(\t\"c\n\013SeqScan"
      "Plan\022\017\n\007db_name\030\001 \001(\t\022\020\n\010tab_name\030\002 \001(\t\022"
      "\016\n\006par_id\030\003 \001(\021\022!\n\005child\030\004 \003(\0132\022.session"
      ".ChildPlan\"q\n\014TableGetPlan\022\017\n\007db_name\030\001 "
      "\001(\t\022\020\n\010tab_name\030\002 \001(\t\022\016\n\006par_id\030\003 \001(\021\022\013\n"
      "\003key\030\004 \001(\t\022!\n\005child\030\005 \003(\0132\022.session.Chil"
      "dPlan\"V\n\nFilterPlan\022%\n\005conds\030\001 \001(\0132\026.ses"
      "sion.BinaryMessage\022!\n\005child\030\002 \003(\0132\022.sess"
      "ion.ChildPlan\"\201\001\n\nInsertPlan\022\017\n\007db_name\030"
      "\001 \001(\t\022\020\n\010tab_name\030\002 \001(\t\022\016\n\006par_id\030\003 \001(\021\022"
      "\020\n\010col_name\030\004 \003(\t\022\013\n\003val\030\005 \003(\021\022!\n\005child\030"
      "\006 \003(\0132\022.session.ChildPlan\"b\n\nDeletePlan\022"
      "\017\n\007db_name\030\001 \001(\t\022\020\n\010tab_name\030\002 \001(\t\022\016\n\006pa"
      "r_id\030\003 \001(\021\022!\n\005child\030\004 \003(\0132\022.session.Chil"
      "dPlan\"\212\001\n\nUpdatePlan\022\017\n\007db_name\030\001 \001(\t\022\020\n"
      "\010tab_name\030\002 \001(\t\022\016\n\006par_id\030\003 \001(\021\022\025\n\rset_c"
      "ol_index\030\004 \003(\021\022\017\n\007set_val\030\005 \003(\021\022!\n\005child"
      "\030\006 \003(\0132\022.session.ChildPlan\"W\n\016Projection"
      "Plan\022\020\n\010tab_name\030\001 \001(\t\022\020\n\010col_name\030\002 \003(\t"
      "\022!\n\005child\030\003 \003(\0132\022.session.ChildPlan\"X\n\016N"
      "estedLoopJoin\022#\n\010jointype\030\001 \001(\0162\021.sessio"
      "n.JoinType\022!\n\005child\030\002 \003(\0132\022.session.Chil"
      "dPlan\"\211\001\n\017DistributedPlan\022,\n\005nodes\030\001 \003(\013"
      "2\035.session.DistributedPlan.Node\022!\n\005plans"
      "\030\002 \003(\0132\022.session.ChildPlan\032%\n\004Node\022\017\n\007ip"
      "_addr\030\001 \001(\t\022\014\n\004port\030\002 \001(\021\"/\n\nRemotePlan\022"
      "!\n\005child\030\001 \001(\0132\022.session.ChildPlan*B\n\010Jo"
      "inType\022\013\n\007INVALID\020\000\022\010\n\004LEFT\020\001\022\t\n\005RIGHT\020\003"
      "\022\t\n\005INNER\020\004\022\t\n\005OUTER\020\0052\205\001\n\017Session_Servi"
      "ce\022;\n\014SQL_Transfer\022\024.session.SQL_Request"
      "\032\025.session.SQL_Response\0225\n\016SendRemotePla"
      "n\022\023.session.RemotePlan\032\016.session.TableB\003"
      "\200\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2251);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "session.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_session_2eproto
namespace session {
const ::google::protobuf::EnumDescriptor* JoinType_descriptor() {
  protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_session_2eproto::file_level_enum_descriptors[0];
}
bool JoinType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Value::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value::Value()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_session_2eproto::scc_info_Value.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:session.Value)
}
Value::Value(const Value& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:session.Value)
}

void Value::SharedCtor() {
  value_ = 0;
}

Value::~Value() {
  // @@protoc_insertion_point(destructor:session.Value)
  SharedDtor();
}

void Value::SharedDtor() {
}

void Value::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Value::descriptor() {
  ::protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value& Value::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_session_2eproto::scc_info_Value.base);
  return *internal_default_instance();
}


void Value::Clear() {
// @@protoc_insertion_point(message_clear_start:session.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

bool Value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:session.Value)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:session.Value)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:session.Value)
  return false;
#undef DO_
}

void Value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:session.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 value = 3;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:session.Value)
}

::google::protobuf::uint8* Value::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:session.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 value = 3;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:session.Value)
  return target;
}

size_t Value::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:session.Value)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint32 value = 3;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Value::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:session.Value)
  GOOGLE_DCHECK_NE(&from, this);
  const Value* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:session.Value)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:session.Value)
    MergeFrom(*source);
  }
}

void Value::MergeFrom(const Value& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:session.Value)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Value::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:session.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value::CopyFrom(const Value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:session.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value::IsInitialized() const {
  return true;
}

void Value::Swap(Value* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value::InternalSwap(Value* other) {
  using std::swap;
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Value::GetMetadata() const {
  protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Tuple::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tuple::kTupleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tuple::Tuple()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_session_2eproto::scc_info_Tuple.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:session.Tuple)
}
Tuple::Tuple(const Tuple& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tuple_(from.tuple_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:session.Tuple)
}

void Tuple::SharedCtor() {
}

Tuple::~Tuple() {
  // @@protoc_insertion_point(destructor:session.Tuple)
  SharedDtor();
}

void Tuple::SharedDtor() {
}

void Tuple::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Tuple::descriptor() {
  ::protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Tuple& Tuple::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_session_2eproto::scc_info_Tuple.base);
  return *internal_default_instance();
}


void Tuple::Clear() {
// @@protoc_insertion_point(message_clear_start:session.Tuple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tuple_.Clear();
  _internal_metadata_.Clear();
}

bool Tuple::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:session.Tuple)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .session.Value tuple = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tuple()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:session.Tuple)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:session.Tuple)
  return false;
#undef DO_
}

void Tuple::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:session.Tuple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .session.Value tuple = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tuple_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->tuple(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:session.Tuple)
}

::google::protobuf::uint8* Tuple::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:session.Tuple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .session.Value tuple = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tuple_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->tuple(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:session.Tuple)
  return target;
}

size_t Tuple::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:session.Tuple)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .session.Value tuple = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->tuple_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tuple(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Tuple::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:session.Tuple)
  GOOGLE_DCHECK_NE(&from, this);
  const Tuple* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Tuple>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:session.Tuple)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:session.Tuple)
    MergeFrom(*source);
  }
}

void Tuple::MergeFrom(const Tuple& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:session.Tuple)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tuple_.MergeFrom(from.tuple_);
}

void Tuple::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:session.Tuple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tuple::CopyFrom(const Tuple& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:session.Tuple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tuple::IsInitialized() const {
  return true;
}

void Tuple::Swap(Tuple* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tuple::InternalSwap(Tuple* other) {
  using std::swap;
  CastToBase(&tuple_)->InternalSwap(CastToBase(&other->tuple_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Tuple::GetMetadata() const {
  protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Table::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Table::kTableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Table::Table()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_session_2eproto::scc_info_Table.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:session.Table)
}
Table::Table(const Table& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      table_(from.table_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:session.Table)
}

void Table::SharedCtor() {
}

Table::~Table() {
  // @@protoc_insertion_point(destructor:session.Table)
  SharedDtor();
}

void Table::SharedDtor() {
}

void Table::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Table::descriptor() {
  ::protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Table& Table::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_session_2eproto::scc_info_Table.base);
  return *internal_default_instance();
}


void Table::Clear() {
// @@protoc_insertion_point(message_clear_start:session.Table)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  table_.Clear();
  _internal_metadata_.Clear();
}

bool Table::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:session.Table)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .session.Tuple table = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_table()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:session.Table)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:session.Table)
  return false;
#undef DO_
}

void Table::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:session.Table)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .session.Tuple table = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->table_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->table(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:session.Table)
}

::google::protobuf::uint8* Table::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:session.Table)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .session.Tuple table = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->table_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->table(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:session.Table)
  return target;
}

size_t Table::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:session.Table)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .session.Tuple table = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->table_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->table(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Table::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:session.Table)
  GOOGLE_DCHECK_NE(&from, this);
  const Table* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Table>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:session.Table)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:session.Table)
    MergeFrom(*source);
  }
}

void Table::MergeFrom(const Table& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:session.Table)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  table_.MergeFrom(from.table_);
}

void Table::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:session.Table)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Table::CopyFrom(const Table& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:session.Table)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Table::IsInitialized() const {
  return true;
}

void Table::Swap(Table* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Table::InternalSwap(Table* other) {
  using std::swap;
  CastToBase(&table_)->InternalSwap(CastToBase(&other->table_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Table::GetMetadata() const {
  protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SQL_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SQL_Request::kSqlStatementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SQL_Request::SQL_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_session_2eproto::scc_info_SQL_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:session.SQL_Request)
}
SQL_Request::SQL_Request(const SQL_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sql_statement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sql_statement().size() > 0) {
    sql_statement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_statement_);
  }
  // @@protoc_insertion_point(copy_constructor:session.SQL_Request)
}

void SQL_Request::SharedCtor() {
  sql_statement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SQL_Request::~SQL_Request() {
  // @@protoc_insertion_point(destructor:session.SQL_Request)
  SharedDtor();
}

void SQL_Request::SharedDtor() {
  sql_statement_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SQL_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SQL_Request::descriptor() {
  ::protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SQL_Request& SQL_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_session_2eproto::scc_info_SQL_Request.base);
  return *internal_default_instance();
}


void SQL_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:session.SQL_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sql_statement_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SQL_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:session.SQL_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Sql_statement = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sql_statement()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sql_statement().data(), static_cast<int>(this->sql_statement().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "session.SQL_Request.Sql_statement"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:session.SQL_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:session.SQL_Request)
  return false;
#undef DO_
}

void SQL_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:session.SQL_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Sql_statement = 1;
  if (this->sql_statement().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sql_statement().data(), static_cast<int>(this->sql_statement().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.SQL_Request.Sql_statement");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sql_statement(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:session.SQL_Request)
}

::google::protobuf::uint8* SQL_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:session.SQL_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Sql_statement = 1;
  if (this->sql_statement().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sql_statement().data(), static_cast<int>(this->sql_statement().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.SQL_Request.Sql_statement");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sql_statement(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:session.SQL_Request)
  return target;
}

size_t SQL_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:session.SQL_Request)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Sql_statement = 1;
  if (this->sql_statement().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sql_statement());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SQL_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:session.SQL_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const SQL_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SQL_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:session.SQL_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:session.SQL_Request)
    MergeFrom(*source);
  }
}

void SQL_Request::MergeFrom(const SQL_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:session.SQL_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sql_statement().size() > 0) {

    sql_statement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sql_statement_);
  }
}

void SQL_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:session.SQL_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SQL_Request::CopyFrom(const SQL_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:session.SQL_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SQL_Request::IsInitialized() const {
  return true;
}

void SQL_Request::Swap(SQL_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SQL_Request::InternalSwap(SQL_Request* other) {
  using std::swap;
  sql_statement_.Swap(&other->sql_statement_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SQL_Request::GetMetadata() const {
  protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SQL_Response::InitAsDefaultInstance() {
  ::session::_SQL_Response_default_instance_._instance.get_mutable()->sql_response_ = const_cast< ::session::Table*>(
      ::session::Table::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SQL_Response::kSqlResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SQL_Response::SQL_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_session_2eproto::scc_info_SQL_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:session.SQL_Response)
}
SQL_Response::SQL_Response(const SQL_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sql_response()) {
    sql_response_ = new ::session::Table(*from.sql_response_);
  } else {
    sql_response_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:session.SQL_Response)
}

void SQL_Response::SharedCtor() {
  sql_response_ = NULL;
}

SQL_Response::~SQL_Response() {
  // @@protoc_insertion_point(destructor:session.SQL_Response)
  SharedDtor();
}

void SQL_Response::SharedDtor() {
  if (this != internal_default_instance()) delete sql_response_;
}

void SQL_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SQL_Response::descriptor() {
  ::protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SQL_Response& SQL_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_session_2eproto::scc_info_SQL_Response.base);
  return *internal_default_instance();
}


void SQL_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:session.SQL_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && sql_response_ != NULL) {
    delete sql_response_;
  }
  sql_response_ = NULL;
  _internal_metadata_.Clear();
}

bool SQL_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:session.SQL_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .session.Table Sql_response = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sql_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:session.SQL_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:session.SQL_Response)
  return false;
#undef DO_
}

void SQL_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:session.SQL_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .session.Table Sql_response = 1;
  if (this->has_sql_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_sql_response(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:session.SQL_Response)
}

::google::protobuf::uint8* SQL_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:session.SQL_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .session.Table Sql_response = 1;
  if (this->has_sql_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_sql_response(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:session.SQL_Response)
  return target;
}

size_t SQL_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:session.SQL_Response)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .session.Table Sql_response = 1;
  if (this->has_sql_response()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *sql_response_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SQL_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:session.SQL_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const SQL_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SQL_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:session.SQL_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:session.SQL_Response)
    MergeFrom(*source);
  }
}

void SQL_Response::MergeFrom(const SQL_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:session.SQL_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sql_response()) {
    mutable_sql_response()->::session::Table::MergeFrom(from.sql_response());
  }
}

void SQL_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:session.SQL_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SQL_Response::CopyFrom(const SQL_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:session.SQL_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SQL_Response::IsInitialized() const {
  return true;
}

void SQL_Response::Swap(SQL_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SQL_Response::InternalSwap(SQL_Response* other) {
  using std::swap;
  swap(sql_response_, other->sql_response_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SQL_Response::GetMetadata() const {
  protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression::kStrExpressionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression::Expression()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_session_2eproto::scc_info_Expression.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:session.Expression)
}
Expression::Expression(const Expression& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  str_expression_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.str_expression().size() > 0) {
    str_expression_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_expression_);
  }
  // @@protoc_insertion_point(copy_constructor:session.Expression)
}

void Expression::SharedCtor() {
  str_expression_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Expression::~Expression() {
  // @@protoc_insertion_point(destructor:session.Expression)
  SharedDtor();
}

void Expression::SharedDtor() {
  str_expression_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Expression::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression::descriptor() {
  ::protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression& Expression::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_session_2eproto::scc_info_Expression.base);
  return *internal_default_instance();
}


void Expression::Clear() {
// @@protoc_insertion_point(message_clear_start:session.Expression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  str_expression_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Expression::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:session.Expression)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string str_expression = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str_expression()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str_expression().data(), static_cast<int>(this->str_expression().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "session.Expression.str_expression"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:session.Expression)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:session.Expression)
  return false;
#undef DO_
}

void Expression::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:session.Expression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string str_expression = 1;
  if (this->str_expression().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str_expression().data(), static_cast<int>(this->str_expression().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.Expression.str_expression");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->str_expression(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:session.Expression)
}

::google::protobuf::uint8* Expression::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:session.Expression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string str_expression = 1;
  if (this->str_expression().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str_expression().data(), static_cast<int>(this->str_expression().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.Expression.str_expression");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->str_expression(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:session.Expression)
  return target;
}

size_t Expression::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:session.Expression)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string str_expression = 1;
  if (this->str_expression().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->str_expression());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:session.Expression)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:session.Expression)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:session.Expression)
    MergeFrom(*source);
  }
}

void Expression::MergeFrom(const Expression& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:session.Expression)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.str_expression().size() > 0) {

    str_expression_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_expression_);
  }
}

void Expression::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:session.Expression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression::CopyFrom(const Expression& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:session.Expression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression::IsInitialized() const {
  return true;
}

void Expression::Swap(Expression* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression::InternalSwap(Expression* other) {
  using std::swap;
  str_expression_.Swap(&other->str_expression_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression::GetMetadata() const {
  protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Col::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Col::kTabNameFieldNumber;
const int Col::kColNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Col::Col()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_session_2eproto::scc_info_Col.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:session.Col)
}
Col::Col(const Col& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tab_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tab_name().size() > 0) {
    tab_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tab_name_);
  }
  col_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.col_name().size() > 0) {
    col_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_name_);
  }
  // @@protoc_insertion_point(copy_constructor:session.Col)
}

void Col::SharedCtor() {
  tab_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Col::~Col() {
  // @@protoc_insertion_point(destructor:session.Col)
  SharedDtor();
}

void Col::SharedDtor() {
  tab_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Col::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Col::descriptor() {
  ::protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Col& Col::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_session_2eproto::scc_info_Col.base);
  return *internal_default_instance();
}


void Col::Clear() {
// @@protoc_insertion_point(message_clear_start:session.Col)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tab_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  col_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Col::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:session.Col)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string tab_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tab_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tab_name().data(), static_cast<int>(this->tab_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "session.Col.tab_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string col_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_col_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->col_name().data(), static_cast<int>(this->col_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "session.Col.col_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:session.Col)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:session.Col)
  return false;
#undef DO_
}

void Col::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:session.Col)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tab_name = 1;
  if (this->tab_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tab_name().data(), static_cast<int>(this->tab_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.Col.tab_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tab_name(), output);
  }

  // string col_name = 2;
  if (this->col_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col_name().data(), static_cast<int>(this->col_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.Col.col_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->col_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:session.Col)
}

::google::protobuf::uint8* Col::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:session.Col)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tab_name = 1;
  if (this->tab_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tab_name().data(), static_cast<int>(this->tab_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.Col.tab_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tab_name(), target);
  }

  // string col_name = 2;
  if (this->col_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col_name().data(), static_cast<int>(this->col_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.Col.col_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->col_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:session.Col)
  return target;
}

size_t Col::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:session.Col)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string tab_name = 1;
  if (this->tab_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tab_name());
  }

  // string col_name = 2;
  if (this->col_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->col_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Col::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:session.Col)
  GOOGLE_DCHECK_NE(&from, this);
  const Col* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Col>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:session.Col)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:session.Col)
    MergeFrom(*source);
  }
}

void Col::MergeFrom(const Col& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:session.Col)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tab_name().size() > 0) {

    tab_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tab_name_);
  }
  if (from.col_name().size() > 0) {

    col_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.col_name_);
  }
}

void Col::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:session.Col)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Col::CopyFrom(const Col& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:session.Col)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Col::IsInitialized() const {
  return true;
}

void Col::Swap(Col* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Col::InternalSwap(Col* other) {
  using std::swap;
  tab_name_.Swap(&other->tab_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  col_name_.Swap(&other->col_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Col::GetMetadata() const {
  protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expr::InitAsDefaultInstance() {
  ::session::_Expr_default_instance_.val_ = const_cast< ::session::Value*>(
      ::session::Value::internal_default_instance());
  ::session::_Expr_default_instance_.col_ = const_cast< ::session::Col*>(
      ::session::Col::internal_default_instance());
}
void Expr::set_allocated_val(::session::Value* val) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_exp();
  if (val) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      val = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, val, submessage_arena);
    }
    set_has_val();
    exp_.val_ = val;
  }
  // @@protoc_insertion_point(field_set_allocated:session.Expr.val)
}
void Expr::set_allocated_col(::session::Col* col) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_exp();
  if (col) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      col = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, col, submessage_arena);
    }
    set_has_col();
    exp_.col_ = col;
  }
  // @@protoc_insertion_point(field_set_allocated:session.Expr.col)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expr::kValFieldNumber;
const int Expr::kColFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expr::Expr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_session_2eproto::scc_info_Expr.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:session.Expr)
}
Expr::Expr(const Expr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_exp();
  switch (from.exp_case()) {
    case kVal: {
      mutable_val()->::session::Value::MergeFrom(from.val());
      break;
    }
    case kCol: {
      mutable_col()->::session::Col::MergeFrom(from.col());
      break;
    }
    case EXP_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:session.Expr)
}

void Expr::SharedCtor() {
  clear_has_exp();
}

Expr::~Expr() {
  // @@protoc_insertion_point(destructor:session.Expr)
  SharedDtor();
}

void Expr::SharedDtor() {
  if (has_exp()) {
    clear_exp();
  }
}

void Expr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expr::descriptor() {
  ::protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expr& Expr::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_session_2eproto::scc_info_Expr.base);
  return *internal_default_instance();
}


void Expr::clear_exp() {
// @@protoc_insertion_point(one_of_clear_start:session.Expr)
  switch (exp_case()) {
    case kVal: {
      delete exp_.val_;
      break;
    }
    case kCol: {
      delete exp_.col_;
      break;
    }
    case EXP_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EXP_NOT_SET;
}


void Expr::Clear() {
// @@protoc_insertion_point(message_clear_start:session.Expr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_exp();
  _internal_metadata_.Clear();
}

bool Expr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:session.Expr)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .session.Value val = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_val()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .session.Col col = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_col()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:session.Expr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:session.Expr)
  return false;
#undef DO_
}

void Expr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:session.Expr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .session.Value val = 1;
  if (has_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_val(), output);
  }

  // .session.Col col = 2;
  if (has_col()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_col(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:session.Expr)
}

::google::protobuf::uint8* Expr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:session.Expr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .session.Value val = 1;
  if (has_val()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_val(), deterministic, target);
  }

  // .session.Col col = 2;
  if (has_col()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_col(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:session.Expr)
  return target;
}

size_t Expr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:session.Expr)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (exp_case()) {
    // .session.Value val = 1;
    case kVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *exp_.val_);
      break;
    }
    // .session.Col col = 2;
    case kCol: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *exp_.col_);
      break;
    }
    case EXP_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:session.Expr)
  GOOGLE_DCHECK_NE(&from, this);
  const Expr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:session.Expr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:session.Expr)
    MergeFrom(*source);
  }
}

void Expr::MergeFrom(const Expr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:session.Expr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.exp_case()) {
    case kVal: {
      mutable_val()->::session::Value::MergeFrom(from.val());
      break;
    }
    case kCol: {
      mutable_col()->::session::Col::MergeFrom(from.col());
      break;
    }
    case EXP_NOT_SET: {
      break;
    }
  }
}

void Expr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:session.Expr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expr::CopyFrom(const Expr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:session.Expr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expr::IsInitialized() const {
  return true;
}

void Expr::Swap(Expr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expr::InternalSwap(Expr* other) {
  using std::swap;
  swap(exp_, other->exp_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expr::GetMetadata() const {
  protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BinaryMessage::InitAsDefaultInstance() {
  ::session::_BinaryMessage_default_instance_._instance.get_mutable()->col_ = const_cast< ::session::Col*>(
      ::session::Col::internal_default_instance());
  ::session::_BinaryMessage_default_instance_._instance.get_mutable()->exp_ = const_cast< ::session::Expr*>(
      ::session::Expr::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BinaryMessage::kColFieldNumber;
const int BinaryMessage::kOpFieldNumber;
const int BinaryMessage::kExpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BinaryMessage::BinaryMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_session_2eproto::scc_info_BinaryMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:session.BinaryMessage)
}
BinaryMessage::BinaryMessage(const BinaryMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_col()) {
    col_ = new ::session::Col(*from.col_);
  } else {
    col_ = NULL;
  }
  if (from.has_exp()) {
    exp_ = new ::session::Expr(*from.exp_);
  } else {
    exp_ = NULL;
  }
  op_ = from.op_;
  // @@protoc_insertion_point(copy_constructor:session.BinaryMessage)
}

void BinaryMessage::SharedCtor() {
  ::memset(&col_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_) -
      reinterpret_cast<char*>(&col_)) + sizeof(op_));
}

BinaryMessage::~BinaryMessage() {
  // @@protoc_insertion_point(destructor:session.BinaryMessage)
  SharedDtor();
}

void BinaryMessage::SharedDtor() {
  if (this != internal_default_instance()) delete col_;
  if (this != internal_default_instance()) delete exp_;
}

void BinaryMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BinaryMessage::descriptor() {
  ::protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BinaryMessage& BinaryMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_session_2eproto::scc_info_BinaryMessage.base);
  return *internal_default_instance();
}


void BinaryMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:session.BinaryMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && col_ != NULL) {
    delete col_;
  }
  col_ = NULL;
  if (GetArenaNoVirtual() == NULL && exp_ != NULL) {
    delete exp_;
  }
  exp_ = NULL;
  op_ = 0;
  _internal_metadata_.Clear();
}

bool BinaryMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:session.BinaryMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .session.Col col = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_col()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 op = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &op_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .session.Expr exp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_exp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:session.BinaryMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:session.BinaryMessage)
  return false;
#undef DO_
}

void BinaryMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:session.BinaryMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .session.Col col = 1;
  if (this->has_col()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_col(), output);
  }

  // sint32 op = 2;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->op(), output);
  }

  // .session.Expr exp = 3;
  if (this->has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_exp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:session.BinaryMessage)
}

::google::protobuf::uint8* BinaryMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:session.BinaryMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .session.Col col = 1;
  if (this->has_col()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_col(), deterministic, target);
  }

  // sint32 op = 2;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->op(), target);
  }

  // .session.Expr exp = 3;
  if (this->has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_exp(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:session.BinaryMessage)
  return target;
}

size_t BinaryMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:session.BinaryMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .session.Col col = 1;
  if (this->has_col()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *col_);
  }

  // .session.Expr exp = 3;
  if (this->has_exp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *exp_);
  }

  // sint32 op = 2;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->op());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BinaryMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:session.BinaryMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const BinaryMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BinaryMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:session.BinaryMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:session.BinaryMessage)
    MergeFrom(*source);
  }
}

void BinaryMessage::MergeFrom(const BinaryMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:session.BinaryMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_col()) {
    mutable_col()->::session::Col::MergeFrom(from.col());
  }
  if (from.has_exp()) {
    mutable_exp()->::session::Expr::MergeFrom(from.exp());
  }
  if (from.op() != 0) {
    set_op(from.op());
  }
}

void BinaryMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:session.BinaryMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BinaryMessage::CopyFrom(const BinaryMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:session.BinaryMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BinaryMessage::IsInitialized() const {
  return true;
}

void BinaryMessage::Swap(BinaryMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BinaryMessage::InternalSwap(BinaryMessage* other) {
  using std::swap;
  swap(col_, other->col_);
  swap(exp_, other->exp_);
  swap(op_, other->op_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BinaryMessage::GetMetadata() const {
  protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChildPlan::InitAsDefaultInstance() {
  ::session::_ChildPlan_default_instance_.seq_scan_plan_ = const_cast< ::session::SeqScanPlan*>(
      ::session::SeqScanPlan::internal_default_instance());
  ::session::_ChildPlan_default_instance_.filter_plan_ = const_cast< ::session::FilterPlan*>(
      ::session::FilterPlan::internal_default_instance());
  ::session::_ChildPlan_default_instance_.project_plan_ = const_cast< ::session::ProjectionPlan*>(
      ::session::ProjectionPlan::internal_default_instance());
  ::session::_ChildPlan_default_instance_.insert_plan_ = const_cast< ::session::InsertPlan*>(
      ::session::InsertPlan::internal_default_instance());
  ::session::_ChildPlan_default_instance_.delete_plan_ = const_cast< ::session::DeletePlan*>(
      ::session::DeletePlan::internal_default_instance());
  ::session::_ChildPlan_default_instance_.update_plan_ = const_cast< ::session::UpdatePlan*>(
      ::session::UpdatePlan::internal_default_instance());
  ::session::_ChildPlan_default_instance_.nestedloop_join_plan_ = const_cast< ::session::NestedLoopJoin*>(
      ::session::NestedLoopJoin::internal_default_instance());
  ::session::_ChildPlan_default_instance_.value_plan_ = const_cast< ::session::ValuePlan*>(
      ::session::ValuePlan::internal_default_instance());
  ::session::_ChildPlan_default_instance_.table_get_pan_ = const_cast< ::session::TableGetPlan*>(
      ::session::TableGetPlan::internal_default_instance());
  ::session::_ChildPlan_default_instance_.distributed_plan_ = const_cast< ::session::DistributedPlan*>(
      ::session::DistributedPlan::internal_default_instance());
}
void ChildPlan::set_allocated_seq_scan_plan(::session::SeqScanPlan* seq_scan_plan) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_child_plan();
  if (seq_scan_plan) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      seq_scan_plan = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, seq_scan_plan, submessage_arena);
    }
    set_has_seq_scan_plan();
    child_plan_.seq_scan_plan_ = seq_scan_plan;
  }
  // @@protoc_insertion_point(field_set_allocated:session.ChildPlan.seq_scan_plan)
}
void ChildPlan::set_allocated_filter_plan(::session::FilterPlan* filter_plan) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_child_plan();
  if (filter_plan) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      filter_plan = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, filter_plan, submessage_arena);
    }
    set_has_filter_plan();
    child_plan_.filter_plan_ = filter_plan;
  }
  // @@protoc_insertion_point(field_set_allocated:session.ChildPlan.filter_plan)
}
void ChildPlan::set_allocated_project_plan(::session::ProjectionPlan* project_plan) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_child_plan();
  if (project_plan) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      project_plan = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, project_plan, submessage_arena);
    }
    set_has_project_plan();
    child_plan_.project_plan_ = project_plan;
  }
  // @@protoc_insertion_point(field_set_allocated:session.ChildPlan.project_plan)
}
void ChildPlan::set_allocated_insert_plan(::session::InsertPlan* insert_plan) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_child_plan();
  if (insert_plan) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      insert_plan = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, insert_plan, submessage_arena);
    }
    set_has_insert_plan();
    child_plan_.insert_plan_ = insert_plan;
  }
  // @@protoc_insertion_point(field_set_allocated:session.ChildPlan.insert_plan)
}
void ChildPlan::set_allocated_delete_plan(::session::DeletePlan* delete_plan) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_child_plan();
  if (delete_plan) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      delete_plan = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, delete_plan, submessage_arena);
    }
    set_has_delete_plan();
    child_plan_.delete_plan_ = delete_plan;
  }
  // @@protoc_insertion_point(field_set_allocated:session.ChildPlan.delete_plan)
}
void ChildPlan::set_allocated_update_plan(::session::UpdatePlan* update_plan) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_child_plan();
  if (update_plan) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      update_plan = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_plan, submessage_arena);
    }
    set_has_update_plan();
    child_plan_.update_plan_ = update_plan;
  }
  // @@protoc_insertion_point(field_set_allocated:session.ChildPlan.update_plan)
}
void ChildPlan::set_allocated_nestedloop_join_plan(::session::NestedLoopJoin* nestedloop_join_plan) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_child_plan();
  if (nestedloop_join_plan) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      nestedloop_join_plan = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, nestedloop_join_plan, submessage_arena);
    }
    set_has_nestedloop_join_plan();
    child_plan_.nestedloop_join_plan_ = nestedloop_join_plan;
  }
  // @@protoc_insertion_point(field_set_allocated:session.ChildPlan.nestedloop_join_plan)
}
void ChildPlan::set_allocated_value_plan(::session::ValuePlan* value_plan) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_child_plan();
  if (value_plan) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      value_plan = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value_plan, submessage_arena);
    }
    set_has_value_plan();
    child_plan_.value_plan_ = value_plan;
  }
  // @@protoc_insertion_point(field_set_allocated:session.ChildPlan.value_plan)
}
void ChildPlan::set_allocated_table_get_pan(::session::TableGetPlan* table_get_pan) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_child_plan();
  if (table_get_pan) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      table_get_pan = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, table_get_pan, submessage_arena);
    }
    set_has_table_get_pan();
    child_plan_.table_get_pan_ = table_get_pan;
  }
  // @@protoc_insertion_point(field_set_allocated:session.ChildPlan.table_get_pan)
}
void ChildPlan::set_allocated_distributed_plan(::session::DistributedPlan* distributed_plan) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_child_plan();
  if (distributed_plan) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      distributed_plan = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, distributed_plan, submessage_arena);
    }
    set_has_distributed_plan();
    child_plan_.distributed_plan_ = distributed_plan;
  }
  // @@protoc_insertion_point(field_set_allocated:session.ChildPlan.distributed_plan)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChildPlan::kSeqScanPlanFieldNumber;
const int ChildPlan::kFilterPlanFieldNumber;
const int ChildPlan::kProjectPlanFieldNumber;
const int ChildPlan::kInsertPlanFieldNumber;
const int ChildPlan::kDeletePlanFieldNumber;
const int ChildPlan::kUpdatePlanFieldNumber;
const int ChildPlan::kNestedloopJoinPlanFieldNumber;
const int ChildPlan::kValuePlanFieldNumber;
const int ChildPlan::kTableGetPanFieldNumber;
const int ChildPlan::kDistributedPlanFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChildPlan::ChildPlan()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_session_2eproto::scc_info_ChildPlan.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:session.ChildPlan)
}
ChildPlan::ChildPlan(const ChildPlan& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_child_plan();
  switch (from.child_plan_case()) {
    case kSeqScanPlan: {
      mutable_seq_scan_plan()->::session::SeqScanPlan::MergeFrom(from.seq_scan_plan());
      break;
    }
    case kFilterPlan: {
      mutable_filter_plan()->::session::FilterPlan::MergeFrom(from.filter_plan());
      break;
    }
    case kProjectPlan: {
      mutable_project_plan()->::session::ProjectionPlan::MergeFrom(from.project_plan());
      break;
    }
    case kInsertPlan: {
      mutable_insert_plan()->::session::InsertPlan::MergeFrom(from.insert_plan());
      break;
    }
    case kDeletePlan: {
      mutable_delete_plan()->::session::DeletePlan::MergeFrom(from.delete_plan());
      break;
    }
    case kUpdatePlan: {
      mutable_update_plan()->::session::UpdatePlan::MergeFrom(from.update_plan());
      break;
    }
    case kNestedloopJoinPlan: {
      mutable_nestedloop_join_plan()->::session::NestedLoopJoin::MergeFrom(from.nestedloop_join_plan());
      break;
    }
    case kValuePlan: {
      mutable_value_plan()->::session::ValuePlan::MergeFrom(from.value_plan());
      break;
    }
    case kTableGetPan: {
      mutable_table_get_pan()->::session::TableGetPlan::MergeFrom(from.table_get_pan());
      break;
    }
    case kDistributedPlan: {
      mutable_distributed_plan()->::session::DistributedPlan::MergeFrom(from.distributed_plan());
      break;
    }
    case CHILD_PLAN_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:session.ChildPlan)
}

void ChildPlan::SharedCtor() {
  clear_has_child_plan();
}

ChildPlan::~ChildPlan() {
  // @@protoc_insertion_point(destructor:session.ChildPlan)
  SharedDtor();
}

void ChildPlan::SharedDtor() {
  if (has_child_plan()) {
    clear_child_plan();
  }
}

void ChildPlan::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChildPlan::descriptor() {
  ::protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChildPlan& ChildPlan::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_session_2eproto::scc_info_ChildPlan.base);
  return *internal_default_instance();
}


void ChildPlan::clear_child_plan() {
// @@protoc_insertion_point(one_of_clear_start:session.ChildPlan)
  switch (child_plan_case()) {
    case kSeqScanPlan: {
      delete child_plan_.seq_scan_plan_;
      break;
    }
    case kFilterPlan: {
      delete child_plan_.filter_plan_;
      break;
    }
    case kProjectPlan: {
      delete child_plan_.project_plan_;
      break;
    }
    case kInsertPlan: {
      delete child_plan_.insert_plan_;
      break;
    }
    case kDeletePlan: {
      delete child_plan_.delete_plan_;
      break;
    }
    case kUpdatePlan: {
      delete child_plan_.update_plan_;
      break;
    }
    case kNestedloopJoinPlan: {
      delete child_plan_.nestedloop_join_plan_;
      break;
    }
    case kValuePlan: {
      delete child_plan_.value_plan_;
      break;
    }
    case kTableGetPan: {
      delete child_plan_.table_get_pan_;
      break;
    }
    case kDistributedPlan: {
      delete child_plan_.distributed_plan_;
      break;
    }
    case CHILD_PLAN_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CHILD_PLAN_NOT_SET;
}


void ChildPlan::Clear() {
// @@protoc_insertion_point(message_clear_start:session.ChildPlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_child_plan();
  _internal_metadata_.Clear();
}

bool ChildPlan::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:session.ChildPlan)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .session.SeqScanPlan seq_scan_plan = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_seq_scan_plan()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .session.FilterPlan filter_plan = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_filter_plan()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .session.ProjectionPlan project_plan = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_project_plan()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .session.InsertPlan insert_plan = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_insert_plan()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .session.DeletePlan delete_plan = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_delete_plan()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .session.UpdatePlan update_plan = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_update_plan()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .session.NestedLoopJoin nestedloop_join_plan = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_nestedloop_join_plan()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .session.ValuePlan value_plan = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_plan()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .session.TableGetPlan table_get_pan = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table_get_pan()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .session.DistributedPlan distributed_plan = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_distributed_plan()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:session.ChildPlan)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:session.ChildPlan)
  return false;
#undef DO_
}

void ChildPlan::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:session.ChildPlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .session.SeqScanPlan seq_scan_plan = 1;
  if (has_seq_scan_plan()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_seq_scan_plan(), output);
  }

  // .session.FilterPlan filter_plan = 2;
  if (has_filter_plan()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_filter_plan(), output);
  }

  // .session.ProjectionPlan project_plan = 3;
  if (has_project_plan()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_project_plan(), output);
  }

  // .session.InsertPlan insert_plan = 4;
  if (has_insert_plan()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_insert_plan(), output);
  }

  // .session.DeletePlan delete_plan = 5;
  if (has_delete_plan()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_delete_plan(), output);
  }

  // .session.UpdatePlan update_plan = 6;
  if (has_update_plan()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_update_plan(), output);
  }

  // .session.NestedLoopJoin nestedloop_join_plan = 7;
  if (has_nestedloop_join_plan()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_nestedloop_join_plan(), output);
  }

  // .session.ValuePlan value_plan = 8;
  if (has_value_plan()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_value_plan(), output);
  }

  // .session.TableGetPlan table_get_pan = 9;
  if (has_table_get_pan()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_table_get_pan(), output);
  }

  // .session.DistributedPlan distributed_plan = 10;
  if (has_distributed_plan()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_distributed_plan(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:session.ChildPlan)
}

::google::protobuf::uint8* ChildPlan::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:session.ChildPlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .session.SeqScanPlan seq_scan_plan = 1;
  if (has_seq_scan_plan()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_seq_scan_plan(), deterministic, target);
  }

  // .session.FilterPlan filter_plan = 2;
  if (has_filter_plan()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_filter_plan(), deterministic, target);
  }

  // .session.ProjectionPlan project_plan = 3;
  if (has_project_plan()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_project_plan(), deterministic, target);
  }

  // .session.InsertPlan insert_plan = 4;
  if (has_insert_plan()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_insert_plan(), deterministic, target);
  }

  // .session.DeletePlan delete_plan = 5;
  if (has_delete_plan()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_delete_plan(), deterministic, target);
  }

  // .session.UpdatePlan update_plan = 6;
  if (has_update_plan()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_update_plan(), deterministic, target);
  }

  // .session.NestedLoopJoin nestedloop_join_plan = 7;
  if (has_nestedloop_join_plan()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_nestedloop_join_plan(), deterministic, target);
  }

  // .session.ValuePlan value_plan = 8;
  if (has_value_plan()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_value_plan(), deterministic, target);
  }

  // .session.TableGetPlan table_get_pan = 9;
  if (has_table_get_pan()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_table_get_pan(), deterministic, target);
  }

  // .session.DistributedPlan distributed_plan = 10;
  if (has_distributed_plan()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_distributed_plan(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:session.ChildPlan)
  return target;
}

size_t ChildPlan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:session.ChildPlan)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (child_plan_case()) {
    // .session.SeqScanPlan seq_scan_plan = 1;
    case kSeqScanPlan: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *child_plan_.seq_scan_plan_);
      break;
    }
    // .session.FilterPlan filter_plan = 2;
    case kFilterPlan: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *child_plan_.filter_plan_);
      break;
    }
    // .session.ProjectionPlan project_plan = 3;
    case kProjectPlan: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *child_plan_.project_plan_);
      break;
    }
    // .session.InsertPlan insert_plan = 4;
    case kInsertPlan: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *child_plan_.insert_plan_);
      break;
    }
    // .session.DeletePlan delete_plan = 5;
    case kDeletePlan: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *child_plan_.delete_plan_);
      break;
    }
    // .session.UpdatePlan update_plan = 6;
    case kUpdatePlan: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *child_plan_.update_plan_);
      break;
    }
    // .session.NestedLoopJoin nestedloop_join_plan = 7;
    case kNestedloopJoinPlan: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *child_plan_.nestedloop_join_plan_);
      break;
    }
    // .session.ValuePlan value_plan = 8;
    case kValuePlan: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *child_plan_.value_plan_);
      break;
    }
    // .session.TableGetPlan table_get_pan = 9;
    case kTableGetPan: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *child_plan_.table_get_pan_);
      break;
    }
    // .session.DistributedPlan distributed_plan = 10;
    case kDistributedPlan: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *child_plan_.distributed_plan_);
      break;
    }
    case CHILD_PLAN_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChildPlan::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:session.ChildPlan)
  GOOGLE_DCHECK_NE(&from, this);
  const ChildPlan* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChildPlan>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:session.ChildPlan)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:session.ChildPlan)
    MergeFrom(*source);
  }
}

void ChildPlan::MergeFrom(const ChildPlan& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:session.ChildPlan)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.child_plan_case()) {
    case kSeqScanPlan: {
      mutable_seq_scan_plan()->::session::SeqScanPlan::MergeFrom(from.seq_scan_plan());
      break;
    }
    case kFilterPlan: {
      mutable_filter_plan()->::session::FilterPlan::MergeFrom(from.filter_plan());
      break;
    }
    case kProjectPlan: {
      mutable_project_plan()->::session::ProjectionPlan::MergeFrom(from.project_plan());
      break;
    }
    case kInsertPlan: {
      mutable_insert_plan()->::session::InsertPlan::MergeFrom(from.insert_plan());
      break;
    }
    case kDeletePlan: {
      mutable_delete_plan()->::session::DeletePlan::MergeFrom(from.delete_plan());
      break;
    }
    case kUpdatePlan: {
      mutable_update_plan()->::session::UpdatePlan::MergeFrom(from.update_plan());
      break;
    }
    case kNestedloopJoinPlan: {
      mutable_nestedloop_join_plan()->::session::NestedLoopJoin::MergeFrom(from.nestedloop_join_plan());
      break;
    }
    case kValuePlan: {
      mutable_value_plan()->::session::ValuePlan::MergeFrom(from.value_plan());
      break;
    }
    case kTableGetPan: {
      mutable_table_get_pan()->::session::TableGetPlan::MergeFrom(from.table_get_pan());
      break;
    }
    case kDistributedPlan: {
      mutable_distributed_plan()->::session::DistributedPlan::MergeFrom(from.distributed_plan());
      break;
    }
    case CHILD_PLAN_NOT_SET: {
      break;
    }
  }
}

void ChildPlan::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:session.ChildPlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChildPlan::CopyFrom(const ChildPlan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:session.ChildPlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChildPlan::IsInitialized() const {
  return true;
}

void ChildPlan::Swap(ChildPlan* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChildPlan::InternalSwap(ChildPlan* other) {
  using std::swap;
  swap(child_plan_, other->child_plan_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChildPlan::GetMetadata() const {
  protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ValuePlan::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValuePlan::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValuePlan::ValuePlan()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_session_2eproto::scc_info_ValuePlan.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:session.ValuePlan)
}
ValuePlan::ValuePlan(const ValuePlan& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      value_(from.value_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:session.ValuePlan)
}

void ValuePlan::SharedCtor() {
}

ValuePlan::~ValuePlan() {
  // @@protoc_insertion_point(destructor:session.ValuePlan)
  SharedDtor();
}

void ValuePlan::SharedDtor() {
}

void ValuePlan::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ValuePlan::descriptor() {
  ::protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValuePlan& ValuePlan::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_session_2eproto::scc_info_ValuePlan.base);
  return *internal_default_instance();
}


void ValuePlan::Clear() {
// @@protoc_insertion_point(message_clear_start:session.ValuePlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.Clear();
  _internal_metadata_.Clear();
}

bool ValuePlan::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:session.ValuePlan)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value(this->value_size() - 1).data(),
            static_cast<int>(this->value(this->value_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "session.ValuePlan.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:session.ValuePlan)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:session.ValuePlan)
  return false;
#undef DO_
}

void ValuePlan::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:session.ValuePlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string value = 2;
  for (int i = 0, n = this->value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value(i).data(), static_cast<int>(this->value(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.ValuePlan.value");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->value(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:session.ValuePlan)
}

::google::protobuf::uint8* ValuePlan::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:session.ValuePlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string value = 2;
  for (int i = 0, n = this->value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value(i).data(), static_cast<int>(this->value(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.ValuePlan.value");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->value(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:session.ValuePlan)
  return target;
}

size_t ValuePlan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:session.ValuePlan)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string value = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->value_size());
  for (int i = 0, n = this->value_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->value(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValuePlan::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:session.ValuePlan)
  GOOGLE_DCHECK_NE(&from, this);
  const ValuePlan* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValuePlan>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:session.ValuePlan)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:session.ValuePlan)
    MergeFrom(*source);
  }
}

void ValuePlan::MergeFrom(const ValuePlan& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:session.ValuePlan)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  value_.MergeFrom(from.value_);
}

void ValuePlan::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:session.ValuePlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValuePlan::CopyFrom(const ValuePlan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:session.ValuePlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValuePlan::IsInitialized() const {
  return true;
}

void ValuePlan::Swap(ValuePlan* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValuePlan::InternalSwap(ValuePlan* other) {
  using std::swap;
  value_.InternalSwap(CastToBase(&other->value_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ValuePlan::GetMetadata() const {
  protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SeqScanPlan::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SeqScanPlan::kDbNameFieldNumber;
const int SeqScanPlan::kTabNameFieldNumber;
const int SeqScanPlan::kParIdFieldNumber;
const int SeqScanPlan::kChildFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SeqScanPlan::SeqScanPlan()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_session_2eproto::scc_info_ChildPlan.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:session.SeqScanPlan)
}
SeqScanPlan::SeqScanPlan(const SeqScanPlan& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      child_(from.child_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  db_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.db_name().size() > 0) {
    db_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_name_);
  }
  tab_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tab_name().size() > 0) {
    tab_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tab_name_);
  }
  par_id_ = from.par_id_;
  // @@protoc_insertion_point(copy_constructor:session.SeqScanPlan)
}

void SeqScanPlan::SharedCtor() {
  db_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tab_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  par_id_ = 0;
}

SeqScanPlan::~SeqScanPlan() {
  // @@protoc_insertion_point(destructor:session.SeqScanPlan)
  SharedDtor();
}

void SeqScanPlan::SharedDtor() {
  db_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tab_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SeqScanPlan::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SeqScanPlan::descriptor() {
  ::protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SeqScanPlan& SeqScanPlan::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_session_2eproto::scc_info_ChildPlan.base);
  return *internal_default_instance();
}


void SeqScanPlan::Clear() {
// @@protoc_insertion_point(message_clear_start:session.SeqScanPlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  child_.Clear();
  db_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tab_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  par_id_ = 0;
  _internal_metadata_.Clear();
}

bool SeqScanPlan::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:session.SeqScanPlan)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string db_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->db_name().data(), static_cast<int>(this->db_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "session.SeqScanPlan.db_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tab_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tab_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tab_name().data(), static_cast<int>(this->tab_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "session.SeqScanPlan.tab_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 par_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &par_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .session.ChildPlan child = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_child()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:session.SeqScanPlan)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:session.SeqScanPlan)
  return false;
#undef DO_
}

void SeqScanPlan::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:session.SeqScanPlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string db_name = 1;
  if (this->db_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db_name().data(), static_cast<int>(this->db_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.SeqScanPlan.db_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->db_name(), output);
  }

  // string tab_name = 2;
  if (this->tab_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tab_name().data(), static_cast<int>(this->tab_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.SeqScanPlan.tab_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tab_name(), output);
  }

  // sint32 par_id = 3;
  if (this->par_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->par_id(), output);
  }

  // repeated .session.ChildPlan child = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->child(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:session.SeqScanPlan)
}

::google::protobuf::uint8* SeqScanPlan::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:session.SeqScanPlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string db_name = 1;
  if (this->db_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db_name().data(), static_cast<int>(this->db_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.SeqScanPlan.db_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->db_name(), target);
  }

  // string tab_name = 2;
  if (this->tab_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tab_name().data(), static_cast<int>(this->tab_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.SeqScanPlan.tab_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tab_name(), target);
  }

  // sint32 par_id = 3;
  if (this->par_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->par_id(), target);
  }

  // repeated .session.ChildPlan child = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->child(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:session.SeqScanPlan)
  return target;
}

size_t SeqScanPlan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:session.SeqScanPlan)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .session.ChildPlan child = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->child_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->child(static_cast<int>(i)));
    }
  }

  // string db_name = 1;
  if (this->db_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->db_name());
  }

  // string tab_name = 2;
  if (this->tab_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tab_name());
  }

  // sint32 par_id = 3;
  if (this->par_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->par_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SeqScanPlan::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:session.SeqScanPlan)
  GOOGLE_DCHECK_NE(&from, this);
  const SeqScanPlan* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SeqScanPlan>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:session.SeqScanPlan)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:session.SeqScanPlan)
    MergeFrom(*source);
  }
}

void SeqScanPlan::MergeFrom(const SeqScanPlan& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:session.SeqScanPlan)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  child_.MergeFrom(from.child_);
  if (from.db_name().size() > 0) {

    db_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_name_);
  }
  if (from.tab_name().size() > 0) {

    tab_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tab_name_);
  }
  if (from.par_id() != 0) {
    set_par_id(from.par_id());
  }
}

void SeqScanPlan::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:session.SeqScanPlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SeqScanPlan::CopyFrom(const SeqScanPlan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:session.SeqScanPlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SeqScanPlan::IsInitialized() const {
  return true;
}

void SeqScanPlan::Swap(SeqScanPlan* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SeqScanPlan::InternalSwap(SeqScanPlan* other) {
  using std::swap;
  CastToBase(&child_)->InternalSwap(CastToBase(&other->child_));
  db_name_.Swap(&other->db_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tab_name_.Swap(&other->tab_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(par_id_, other->par_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SeqScanPlan::GetMetadata() const {
  protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TableGetPlan::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TableGetPlan::kDbNameFieldNumber;
const int TableGetPlan::kTabNameFieldNumber;
const int TableGetPlan::kParIdFieldNumber;
const int TableGetPlan::kKeyFieldNumber;
const int TableGetPlan::kChildFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TableGetPlan::TableGetPlan()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_session_2eproto::scc_info_ChildPlan.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:session.TableGetPlan)
}
TableGetPlan::TableGetPlan(const TableGetPlan& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      child_(from.child_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  db_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.db_name().size() > 0) {
    db_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_name_);
  }
  tab_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tab_name().size() > 0) {
    tab_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tab_name_);
  }
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  par_id_ = from.par_id_;
  // @@protoc_insertion_point(copy_constructor:session.TableGetPlan)
}

void TableGetPlan::SharedCtor() {
  db_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tab_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  par_id_ = 0;
}

TableGetPlan::~TableGetPlan() {
  // @@protoc_insertion_point(destructor:session.TableGetPlan)
  SharedDtor();
}

void TableGetPlan::SharedDtor() {
  db_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tab_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TableGetPlan::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TableGetPlan::descriptor() {
  ::protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TableGetPlan& TableGetPlan::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_session_2eproto::scc_info_ChildPlan.base);
  return *internal_default_instance();
}


void TableGetPlan::Clear() {
// @@protoc_insertion_point(message_clear_start:session.TableGetPlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  child_.Clear();
  db_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tab_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  par_id_ = 0;
  _internal_metadata_.Clear();
}

bool TableGetPlan::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:session.TableGetPlan)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string db_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->db_name().data(), static_cast<int>(this->db_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "session.TableGetPlan.db_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tab_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tab_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tab_name().data(), static_cast<int>(this->tab_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "session.TableGetPlan.tab_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 par_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &par_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string key = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "session.TableGetPlan.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .session.ChildPlan child = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_child()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:session.TableGetPlan)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:session.TableGetPlan)
  return false;
#undef DO_
}

void TableGetPlan::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:session.TableGetPlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string db_name = 1;
  if (this->db_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db_name().data(), static_cast<int>(this->db_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.TableGetPlan.db_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->db_name(), output);
  }

  // string tab_name = 2;
  if (this->tab_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tab_name().data(), static_cast<int>(this->tab_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.TableGetPlan.tab_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tab_name(), output);
  }

  // sint32 par_id = 3;
  if (this->par_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->par_id(), output);
  }

  // string key = 4;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.TableGetPlan.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->key(), output);
  }

  // repeated .session.ChildPlan child = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->child(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:session.TableGetPlan)
}

::google::protobuf::uint8* TableGetPlan::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:session.TableGetPlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string db_name = 1;
  if (this->db_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db_name().data(), static_cast<int>(this->db_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.TableGetPlan.db_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->db_name(), target);
  }

  // string tab_name = 2;
  if (this->tab_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tab_name().data(), static_cast<int>(this->tab_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.TableGetPlan.tab_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tab_name(), target);
  }

  // sint32 par_id = 3;
  if (this->par_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->par_id(), target);
  }

  // string key = 4;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.TableGetPlan.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->key(), target);
  }

  // repeated .session.ChildPlan child = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->child(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:session.TableGetPlan)
  return target;
}

size_t TableGetPlan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:session.TableGetPlan)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .session.ChildPlan child = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->child_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->child(static_cast<int>(i)));
    }
  }

  // string db_name = 1;
  if (this->db_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->db_name());
  }

  // string tab_name = 2;
  if (this->tab_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tab_name());
  }

  // string key = 4;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // sint32 par_id = 3;
  if (this->par_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->par_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TableGetPlan::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:session.TableGetPlan)
  GOOGLE_DCHECK_NE(&from, this);
  const TableGetPlan* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TableGetPlan>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:session.TableGetPlan)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:session.TableGetPlan)
    MergeFrom(*source);
  }
}

void TableGetPlan::MergeFrom(const TableGetPlan& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:session.TableGetPlan)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  child_.MergeFrom(from.child_);
  if (from.db_name().size() > 0) {

    db_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_name_);
  }
  if (from.tab_name().size() > 0) {

    tab_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tab_name_);
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.par_id() != 0) {
    set_par_id(from.par_id());
  }
}

void TableGetPlan::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:session.TableGetPlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableGetPlan::CopyFrom(const TableGetPlan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:session.TableGetPlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableGetPlan::IsInitialized() const {
  return true;
}

void TableGetPlan::Swap(TableGetPlan* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TableGetPlan::InternalSwap(TableGetPlan* other) {
  using std::swap;
  CastToBase(&child_)->InternalSwap(CastToBase(&other->child_));
  db_name_.Swap(&other->db_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tab_name_.Swap(&other->tab_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(par_id_, other->par_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TableGetPlan::GetMetadata() const {
  protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FilterPlan::InitAsDefaultInstance() {
  ::session::_FilterPlan_default_instance_._instance.get_mutable()->conds_ = const_cast< ::session::BinaryMessage*>(
      ::session::BinaryMessage::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FilterPlan::kCondsFieldNumber;
const int FilterPlan::kChildFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FilterPlan::FilterPlan()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_session_2eproto::scc_info_ChildPlan.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:session.FilterPlan)
}
FilterPlan::FilterPlan(const FilterPlan& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      child_(from.child_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_conds()) {
    conds_ = new ::session::BinaryMessage(*from.conds_);
  } else {
    conds_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:session.FilterPlan)
}

void FilterPlan::SharedCtor() {
  conds_ = NULL;
}

FilterPlan::~FilterPlan() {
  // @@protoc_insertion_point(destructor:session.FilterPlan)
  SharedDtor();
}

void FilterPlan::SharedDtor() {
  if (this != internal_default_instance()) delete conds_;
}

void FilterPlan::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FilterPlan::descriptor() {
  ::protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FilterPlan& FilterPlan::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_session_2eproto::scc_info_ChildPlan.base);
  return *internal_default_instance();
}


void FilterPlan::Clear() {
// @@protoc_insertion_point(message_clear_start:session.FilterPlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  child_.Clear();
  if (GetArenaNoVirtual() == NULL && conds_ != NULL) {
    delete conds_;
  }
  conds_ = NULL;
  _internal_metadata_.Clear();
}

bool FilterPlan::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:session.FilterPlan)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .session.BinaryMessage conds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .session.ChildPlan child = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_child()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:session.FilterPlan)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:session.FilterPlan)
  return false;
#undef DO_
}

void FilterPlan::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:session.FilterPlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .session.BinaryMessage conds = 1;
  if (this->has_conds()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_conds(), output);
  }

  // repeated .session.ChildPlan child = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->child(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:session.FilterPlan)
}

::google::protobuf::uint8* FilterPlan::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:session.FilterPlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .session.BinaryMessage conds = 1;
  if (this->has_conds()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_conds(), deterministic, target);
  }

  // repeated .session.ChildPlan child = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->child(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:session.FilterPlan)
  return target;
}

size_t FilterPlan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:session.FilterPlan)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .session.ChildPlan child = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->child_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->child(static_cast<int>(i)));
    }
  }

  // .session.BinaryMessage conds = 1;
  if (this->has_conds()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *conds_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FilterPlan::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:session.FilterPlan)
  GOOGLE_DCHECK_NE(&from, this);
  const FilterPlan* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FilterPlan>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:session.FilterPlan)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:session.FilterPlan)
    MergeFrom(*source);
  }
}

void FilterPlan::MergeFrom(const FilterPlan& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:session.FilterPlan)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  child_.MergeFrom(from.child_);
  if (from.has_conds()) {
    mutable_conds()->::session::BinaryMessage::MergeFrom(from.conds());
  }
}

void FilterPlan::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:session.FilterPlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FilterPlan::CopyFrom(const FilterPlan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:session.FilterPlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FilterPlan::IsInitialized() const {
  return true;
}

void FilterPlan::Swap(FilterPlan* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FilterPlan::InternalSwap(FilterPlan* other) {
  using std::swap;
  CastToBase(&child_)->InternalSwap(CastToBase(&other->child_));
  swap(conds_, other->conds_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FilterPlan::GetMetadata() const {
  protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InsertPlan::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InsertPlan::kDbNameFieldNumber;
const int InsertPlan::kTabNameFieldNumber;
const int InsertPlan::kParIdFieldNumber;
const int InsertPlan::kColNameFieldNumber;
const int InsertPlan::kValFieldNumber;
const int InsertPlan::kChildFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InsertPlan::InsertPlan()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_session_2eproto::scc_info_ChildPlan.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:session.InsertPlan)
}
InsertPlan::InsertPlan(const InsertPlan& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      col_name_(from.col_name_),
      val_(from.val_),
      child_(from.child_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  db_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.db_name().size() > 0) {
    db_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_name_);
  }
  tab_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tab_name().size() > 0) {
    tab_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tab_name_);
  }
  par_id_ = from.par_id_;
  // @@protoc_insertion_point(copy_constructor:session.InsertPlan)
}

void InsertPlan::SharedCtor() {
  db_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tab_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  par_id_ = 0;
}

InsertPlan::~InsertPlan() {
  // @@protoc_insertion_point(destructor:session.InsertPlan)
  SharedDtor();
}

void InsertPlan::SharedDtor() {
  db_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tab_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InsertPlan::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InsertPlan::descriptor() {
  ::protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InsertPlan& InsertPlan::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_session_2eproto::scc_info_ChildPlan.base);
  return *internal_default_instance();
}


void InsertPlan::Clear() {
// @@protoc_insertion_point(message_clear_start:session.InsertPlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  col_name_.Clear();
  val_.Clear();
  child_.Clear();
  db_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tab_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  par_id_ = 0;
  _internal_metadata_.Clear();
}

bool InsertPlan::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:session.InsertPlan)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string db_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->db_name().data(), static_cast<int>(this->db_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "session.InsertPlan.db_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tab_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tab_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tab_name().data(), static_cast<int>(this->tab_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "session.InsertPlan.tab_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 par_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &par_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string col_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_col_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->col_name(this->col_name_size() - 1).data(),
            static_cast<int>(this->col_name(this->col_name_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "session.InsertPlan.col_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 val = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_val())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 42u, input, this->mutable_val())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .session.ChildPlan child = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_child()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:session.InsertPlan)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:session.InsertPlan)
  return false;
#undef DO_
}

void InsertPlan::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:session.InsertPlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string db_name = 1;
  if (this->db_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db_name().data(), static_cast<int>(this->db_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.InsertPlan.db_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->db_name(), output);
  }

  // string tab_name = 2;
  if (this->tab_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tab_name().data(), static_cast<int>(this->tab_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.InsertPlan.tab_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tab_name(), output);
  }

  // sint32 par_id = 3;
  if (this->par_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->par_id(), output);
  }

  // repeated string col_name = 4;
  for (int i = 0, n = this->col_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col_name(i).data(), static_cast<int>(this->col_name(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.InsertPlan.col_name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->col_name(i), output);
  }

  // repeated sint32 val = 5;
  if (this->val_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _val_cached_byte_size_));
  }
  for (int i = 0, n = this->val_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->val(i), output);
  }

  // repeated .session.ChildPlan child = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->child(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:session.InsertPlan)
}

::google::protobuf::uint8* InsertPlan::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:session.InsertPlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string db_name = 1;
  if (this->db_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db_name().data(), static_cast<int>(this->db_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.InsertPlan.db_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->db_name(), target);
  }

  // string tab_name = 2;
  if (this->tab_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tab_name().data(), static_cast<int>(this->tab_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.InsertPlan.tab_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tab_name(), target);
  }

  // sint32 par_id = 3;
  if (this->par_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->par_id(), target);
  }

  // repeated string col_name = 4;
  for (int i = 0, n = this->col_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col_name(i).data(), static_cast<int>(this->col_name(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.InsertPlan.col_name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->col_name(i), target);
  }

  // repeated sint32 val = 5;
  if (this->val_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _val_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->val_, target);
  }

  // repeated .session.ChildPlan child = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->child(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:session.InsertPlan)
  return target;
}

size_t InsertPlan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:session.InsertPlan)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string col_name = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->col_name_size());
  for (int i = 0, n = this->col_name_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->col_name(i));
  }

  // repeated sint32 val = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->val_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _val_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .session.ChildPlan child = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->child_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->child(static_cast<int>(i)));
    }
  }

  // string db_name = 1;
  if (this->db_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->db_name());
  }

  // string tab_name = 2;
  if (this->tab_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tab_name());
  }

  // sint32 par_id = 3;
  if (this->par_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->par_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InsertPlan::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:session.InsertPlan)
  GOOGLE_DCHECK_NE(&from, this);
  const InsertPlan* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InsertPlan>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:session.InsertPlan)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:session.InsertPlan)
    MergeFrom(*source);
  }
}

void InsertPlan::MergeFrom(const InsertPlan& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:session.InsertPlan)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  col_name_.MergeFrom(from.col_name_);
  val_.MergeFrom(from.val_);
  child_.MergeFrom(from.child_);
  if (from.db_name().size() > 0) {

    db_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_name_);
  }
  if (from.tab_name().size() > 0) {

    tab_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tab_name_);
  }
  if (from.par_id() != 0) {
    set_par_id(from.par_id());
  }
}

void InsertPlan::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:session.InsertPlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsertPlan::CopyFrom(const InsertPlan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:session.InsertPlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsertPlan::IsInitialized() const {
  return true;
}

void InsertPlan::Swap(InsertPlan* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InsertPlan::InternalSwap(InsertPlan* other) {
  using std::swap;
  col_name_.InternalSwap(CastToBase(&other->col_name_));
  val_.InternalSwap(&other->val_);
  CastToBase(&child_)->InternalSwap(CastToBase(&other->child_));
  db_name_.Swap(&other->db_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tab_name_.Swap(&other->tab_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(par_id_, other->par_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InsertPlan::GetMetadata() const {
  protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeletePlan::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeletePlan::kDbNameFieldNumber;
const int DeletePlan::kTabNameFieldNumber;
const int DeletePlan::kParIdFieldNumber;
const int DeletePlan::kChildFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeletePlan::DeletePlan()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_session_2eproto::scc_info_ChildPlan.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:session.DeletePlan)
}
DeletePlan::DeletePlan(const DeletePlan& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      child_(from.child_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  db_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.db_name().size() > 0) {
    db_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_name_);
  }
  tab_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tab_name().size() > 0) {
    tab_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tab_name_);
  }
  par_id_ = from.par_id_;
  // @@protoc_insertion_point(copy_constructor:session.DeletePlan)
}

void DeletePlan::SharedCtor() {
  db_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tab_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  par_id_ = 0;
}

DeletePlan::~DeletePlan() {
  // @@protoc_insertion_point(destructor:session.DeletePlan)
  SharedDtor();
}

void DeletePlan::SharedDtor() {
  db_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tab_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeletePlan::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeletePlan::descriptor() {
  ::protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeletePlan& DeletePlan::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_session_2eproto::scc_info_ChildPlan.base);
  return *internal_default_instance();
}


void DeletePlan::Clear() {
// @@protoc_insertion_point(message_clear_start:session.DeletePlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  child_.Clear();
  db_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tab_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  par_id_ = 0;
  _internal_metadata_.Clear();
}

bool DeletePlan::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:session.DeletePlan)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string db_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->db_name().data(), static_cast<int>(this->db_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "session.DeletePlan.db_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tab_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tab_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tab_name().data(), static_cast<int>(this->tab_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "session.DeletePlan.tab_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 par_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &par_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .session.ChildPlan child = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_child()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:session.DeletePlan)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:session.DeletePlan)
  return false;
#undef DO_
}

void DeletePlan::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:session.DeletePlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string db_name = 1;
  if (this->db_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db_name().data(), static_cast<int>(this->db_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.DeletePlan.db_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->db_name(), output);
  }

  // string tab_name = 2;
  if (this->tab_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tab_name().data(), static_cast<int>(this->tab_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.DeletePlan.tab_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tab_name(), output);
  }

  // sint32 par_id = 3;
  if (this->par_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->par_id(), output);
  }

  // repeated .session.ChildPlan child = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->child(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:session.DeletePlan)
}

::google::protobuf::uint8* DeletePlan::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:session.DeletePlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string db_name = 1;
  if (this->db_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db_name().data(), static_cast<int>(this->db_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.DeletePlan.db_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->db_name(), target);
  }

  // string tab_name = 2;
  if (this->tab_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tab_name().data(), static_cast<int>(this->tab_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.DeletePlan.tab_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tab_name(), target);
  }

  // sint32 par_id = 3;
  if (this->par_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->par_id(), target);
  }

  // repeated .session.ChildPlan child = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->child(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:session.DeletePlan)
  return target;
}

size_t DeletePlan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:session.DeletePlan)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .session.ChildPlan child = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->child_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->child(static_cast<int>(i)));
    }
  }

  // string db_name = 1;
  if (this->db_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->db_name());
  }

  // string tab_name = 2;
  if (this->tab_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tab_name());
  }

  // sint32 par_id = 3;
  if (this->par_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->par_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeletePlan::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:session.DeletePlan)
  GOOGLE_DCHECK_NE(&from, this);
  const DeletePlan* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeletePlan>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:session.DeletePlan)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:session.DeletePlan)
    MergeFrom(*source);
  }
}

void DeletePlan::MergeFrom(const DeletePlan& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:session.DeletePlan)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  child_.MergeFrom(from.child_);
  if (from.db_name().size() > 0) {

    db_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_name_);
  }
  if (from.tab_name().size() > 0) {

    tab_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tab_name_);
  }
  if (from.par_id() != 0) {
    set_par_id(from.par_id());
  }
}

void DeletePlan::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:session.DeletePlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeletePlan::CopyFrom(const DeletePlan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:session.DeletePlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePlan::IsInitialized() const {
  return true;
}

void DeletePlan::Swap(DeletePlan* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeletePlan::InternalSwap(DeletePlan* other) {
  using std::swap;
  CastToBase(&child_)->InternalSwap(CastToBase(&other->child_));
  db_name_.Swap(&other->db_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tab_name_.Swap(&other->tab_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(par_id_, other->par_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeletePlan::GetMetadata() const {
  protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdatePlan::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdatePlan::kDbNameFieldNumber;
const int UpdatePlan::kTabNameFieldNumber;
const int UpdatePlan::kParIdFieldNumber;
const int UpdatePlan::kSetColIndexFieldNumber;
const int UpdatePlan::kSetValFieldNumber;
const int UpdatePlan::kChildFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdatePlan::UpdatePlan()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_session_2eproto::scc_info_ChildPlan.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:session.UpdatePlan)
}
UpdatePlan::UpdatePlan(const UpdatePlan& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      set_col_index_(from.set_col_index_),
      set_val_(from.set_val_),
      child_(from.child_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  db_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.db_name().size() > 0) {
    db_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_name_);
  }
  tab_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tab_name().size() > 0) {
    tab_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tab_name_);
  }
  par_id_ = from.par_id_;
  // @@protoc_insertion_point(copy_constructor:session.UpdatePlan)
}

void UpdatePlan::SharedCtor() {
  db_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tab_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  par_id_ = 0;
}

UpdatePlan::~UpdatePlan() {
  // @@protoc_insertion_point(destructor:session.UpdatePlan)
  SharedDtor();
}

void UpdatePlan::SharedDtor() {
  db_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tab_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdatePlan::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdatePlan::descriptor() {
  ::protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdatePlan& UpdatePlan::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_session_2eproto::scc_info_ChildPlan.base);
  return *internal_default_instance();
}


void UpdatePlan::Clear() {
// @@protoc_insertion_point(message_clear_start:session.UpdatePlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_col_index_.Clear();
  set_val_.Clear();
  child_.Clear();
  db_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tab_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  par_id_ = 0;
  _internal_metadata_.Clear();
}

bool UpdatePlan::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:session.UpdatePlan)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string db_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->db_name().data(), static_cast<int>(this->db_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "session.UpdatePlan.db_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tab_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tab_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tab_name().data(), static_cast<int>(this->tab_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "session.UpdatePlan.tab_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 par_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &par_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 set_col_index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_set_col_index())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 34u, input, this->mutable_set_col_index())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 set_val = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_set_val())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 42u, input, this->mutable_set_val())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .session.ChildPlan child = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_child()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:session.UpdatePlan)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:session.UpdatePlan)
  return false;
#undef DO_
}

void UpdatePlan::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:session.UpdatePlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string db_name = 1;
  if (this->db_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db_name().data(), static_cast<int>(this->db_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.UpdatePlan.db_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->db_name(), output);
  }

  // string tab_name = 2;
  if (this->tab_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tab_name().data(), static_cast<int>(this->tab_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.UpdatePlan.tab_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tab_name(), output);
  }

  // sint32 par_id = 3;
  if (this->par_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->par_id(), output);
  }

  // repeated sint32 set_col_index = 4;
  if (this->set_col_index_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _set_col_index_cached_byte_size_));
  }
  for (int i = 0, n = this->set_col_index_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->set_col_index(i), output);
  }

  // repeated sint32 set_val = 5;
  if (this->set_val_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _set_val_cached_byte_size_));
  }
  for (int i = 0, n = this->set_val_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->set_val(i), output);
  }

  // repeated .session.ChildPlan child = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->child(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:session.UpdatePlan)
}

::google::protobuf::uint8* UpdatePlan::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:session.UpdatePlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string db_name = 1;
  if (this->db_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db_name().data(), static_cast<int>(this->db_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.UpdatePlan.db_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->db_name(), target);
  }

  // string tab_name = 2;
  if (this->tab_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tab_name().data(), static_cast<int>(this->tab_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.UpdatePlan.tab_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tab_name(), target);
  }

  // sint32 par_id = 3;
  if (this->par_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->par_id(), target);
  }

  // repeated sint32 set_col_index = 4;
  if (this->set_col_index_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _set_col_index_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->set_col_index_, target);
  }

  // repeated sint32 set_val = 5;
  if (this->set_val_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _set_val_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->set_val_, target);
  }

  // repeated .session.ChildPlan child = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->child(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:session.UpdatePlan)
  return target;
}

size_t UpdatePlan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:session.UpdatePlan)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint32 set_col_index = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->set_col_index_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _set_col_index_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 set_val = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->set_val_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _set_val_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .session.ChildPlan child = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->child_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->child(static_cast<int>(i)));
    }
  }

  // string db_name = 1;
  if (this->db_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->db_name());
  }

  // string tab_name = 2;
  if (this->tab_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tab_name());
  }

  // sint32 par_id = 3;
  if (this->par_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->par_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdatePlan::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:session.UpdatePlan)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdatePlan* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdatePlan>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:session.UpdatePlan)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:session.UpdatePlan)
    MergeFrom(*source);
  }
}

void UpdatePlan::MergeFrom(const UpdatePlan& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:session.UpdatePlan)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  set_col_index_.MergeFrom(from.set_col_index_);
  set_val_.MergeFrom(from.set_val_);
  child_.MergeFrom(from.child_);
  if (from.db_name().size() > 0) {

    db_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_name_);
  }
  if (from.tab_name().size() > 0) {

    tab_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tab_name_);
  }
  if (from.par_id() != 0) {
    set_par_id(from.par_id());
  }
}

void UpdatePlan::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:session.UpdatePlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdatePlan::CopyFrom(const UpdatePlan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:session.UpdatePlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdatePlan::IsInitialized() const {
  return true;
}

void UpdatePlan::Swap(UpdatePlan* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdatePlan::InternalSwap(UpdatePlan* other) {
  using std::swap;
  set_col_index_.InternalSwap(&other->set_col_index_);
  set_val_.InternalSwap(&other->set_val_);
  CastToBase(&child_)->InternalSwap(CastToBase(&other->child_));
  db_name_.Swap(&other->db_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tab_name_.Swap(&other->tab_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(par_id_, other->par_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdatePlan::GetMetadata() const {
  protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProjectionPlan::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProjectionPlan::kTabNameFieldNumber;
const int ProjectionPlan::kColNameFieldNumber;
const int ProjectionPlan::kChildFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProjectionPlan::ProjectionPlan()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_session_2eproto::scc_info_ChildPlan.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:session.ProjectionPlan)
}
ProjectionPlan::ProjectionPlan(const ProjectionPlan& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      col_name_(from.col_name_),
      child_(from.child_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tab_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tab_name().size() > 0) {
    tab_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tab_name_);
  }
  // @@protoc_insertion_point(copy_constructor:session.ProjectionPlan)
}

void ProjectionPlan::SharedCtor() {
  tab_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ProjectionPlan::~ProjectionPlan() {
  // @@protoc_insertion_point(destructor:session.ProjectionPlan)
  SharedDtor();
}

void ProjectionPlan::SharedDtor() {
  tab_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProjectionPlan::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProjectionPlan::descriptor() {
  ::protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProjectionPlan& ProjectionPlan::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_session_2eproto::scc_info_ChildPlan.base);
  return *internal_default_instance();
}


void ProjectionPlan::Clear() {
// @@protoc_insertion_point(message_clear_start:session.ProjectionPlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  col_name_.Clear();
  child_.Clear();
  tab_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ProjectionPlan::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:session.ProjectionPlan)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string tab_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tab_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tab_name().data(), static_cast<int>(this->tab_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "session.ProjectionPlan.tab_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string col_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_col_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->col_name(this->col_name_size() - 1).data(),
            static_cast<int>(this->col_name(this->col_name_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "session.ProjectionPlan.col_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .session.ChildPlan child = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_child()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:session.ProjectionPlan)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:session.ProjectionPlan)
  return false;
#undef DO_
}

void ProjectionPlan::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:session.ProjectionPlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tab_name = 1;
  if (this->tab_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tab_name().data(), static_cast<int>(this->tab_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.ProjectionPlan.tab_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tab_name(), output);
  }

  // repeated string col_name = 2;
  for (int i = 0, n = this->col_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col_name(i).data(), static_cast<int>(this->col_name(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.ProjectionPlan.col_name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->col_name(i), output);
  }

  // repeated .session.ChildPlan child = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->child(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:session.ProjectionPlan)
}

::google::protobuf::uint8* ProjectionPlan::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:session.ProjectionPlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tab_name = 1;
  if (this->tab_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tab_name().data(), static_cast<int>(this->tab_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.ProjectionPlan.tab_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tab_name(), target);
  }

  // repeated string col_name = 2;
  for (int i = 0, n = this->col_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->col_name(i).data(), static_cast<int>(this->col_name(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.ProjectionPlan.col_name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->col_name(i), target);
  }

  // repeated .session.ChildPlan child = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->child(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:session.ProjectionPlan)
  return target;
}

size_t ProjectionPlan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:session.ProjectionPlan)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string col_name = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->col_name_size());
  for (int i = 0, n = this->col_name_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->col_name(i));
  }

  // repeated .session.ChildPlan child = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->child_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->child(static_cast<int>(i)));
    }
  }

  // string tab_name = 1;
  if (this->tab_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tab_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProjectionPlan::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:session.ProjectionPlan)
  GOOGLE_DCHECK_NE(&from, this);
  const ProjectionPlan* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProjectionPlan>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:session.ProjectionPlan)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:session.ProjectionPlan)
    MergeFrom(*source);
  }
}

void ProjectionPlan::MergeFrom(const ProjectionPlan& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:session.ProjectionPlan)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  col_name_.MergeFrom(from.col_name_);
  child_.MergeFrom(from.child_);
  if (from.tab_name().size() > 0) {

    tab_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tab_name_);
  }
}

void ProjectionPlan::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:session.ProjectionPlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProjectionPlan::CopyFrom(const ProjectionPlan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:session.ProjectionPlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProjectionPlan::IsInitialized() const {
  return true;
}

void ProjectionPlan::Swap(ProjectionPlan* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProjectionPlan::InternalSwap(ProjectionPlan* other) {
  using std::swap;
  col_name_.InternalSwap(CastToBase(&other->col_name_));
  CastToBase(&child_)->InternalSwap(CastToBase(&other->child_));
  tab_name_.Swap(&other->tab_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProjectionPlan::GetMetadata() const {
  protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NestedLoopJoin::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NestedLoopJoin::kJointypeFieldNumber;
const int NestedLoopJoin::kChildFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NestedLoopJoin::NestedLoopJoin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_session_2eproto::scc_info_ChildPlan.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:session.NestedLoopJoin)
}
NestedLoopJoin::NestedLoopJoin(const NestedLoopJoin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      child_(from.child_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  jointype_ = from.jointype_;
  // @@protoc_insertion_point(copy_constructor:session.NestedLoopJoin)
}

void NestedLoopJoin::SharedCtor() {
  jointype_ = 0;
}

NestedLoopJoin::~NestedLoopJoin() {
  // @@protoc_insertion_point(destructor:session.NestedLoopJoin)
  SharedDtor();
}

void NestedLoopJoin::SharedDtor() {
}

void NestedLoopJoin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NestedLoopJoin::descriptor() {
  ::protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NestedLoopJoin& NestedLoopJoin::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_session_2eproto::scc_info_ChildPlan.base);
  return *internal_default_instance();
}


void NestedLoopJoin::Clear() {
// @@protoc_insertion_point(message_clear_start:session.NestedLoopJoin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  child_.Clear();
  jointype_ = 0;
  _internal_metadata_.Clear();
}

bool NestedLoopJoin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:session.NestedLoopJoin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .session.JoinType jointype = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_jointype(static_cast< ::session::JoinType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .session.ChildPlan child = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_child()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:session.NestedLoopJoin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:session.NestedLoopJoin)
  return false;
#undef DO_
}

void NestedLoopJoin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:session.NestedLoopJoin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .session.JoinType jointype = 1;
  if (this->jointype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->jointype(), output);
  }

  // repeated .session.ChildPlan child = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->child(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:session.NestedLoopJoin)
}

::google::protobuf::uint8* NestedLoopJoin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:session.NestedLoopJoin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .session.JoinType jointype = 1;
  if (this->jointype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->jointype(), target);
  }

  // repeated .session.ChildPlan child = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->child(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:session.NestedLoopJoin)
  return target;
}

size_t NestedLoopJoin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:session.NestedLoopJoin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .session.ChildPlan child = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->child_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->child(static_cast<int>(i)));
    }
  }

  // .session.JoinType jointype = 1;
  if (this->jointype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->jointype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NestedLoopJoin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:session.NestedLoopJoin)
  GOOGLE_DCHECK_NE(&from, this);
  const NestedLoopJoin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NestedLoopJoin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:session.NestedLoopJoin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:session.NestedLoopJoin)
    MergeFrom(*source);
  }
}

void NestedLoopJoin::MergeFrom(const NestedLoopJoin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:session.NestedLoopJoin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  child_.MergeFrom(from.child_);
  if (from.jointype() != 0) {
    set_jointype(from.jointype());
  }
}

void NestedLoopJoin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:session.NestedLoopJoin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NestedLoopJoin::CopyFrom(const NestedLoopJoin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:session.NestedLoopJoin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NestedLoopJoin::IsInitialized() const {
  return true;
}

void NestedLoopJoin::Swap(NestedLoopJoin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NestedLoopJoin::InternalSwap(NestedLoopJoin* other) {
  using std::swap;
  CastToBase(&child_)->InternalSwap(CastToBase(&other->child_));
  swap(jointype_, other->jointype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NestedLoopJoin::GetMetadata() const {
  protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DistributedPlan_Node::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DistributedPlan_Node::kIpAddrFieldNumber;
const int DistributedPlan_Node::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DistributedPlan_Node::DistributedPlan_Node()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_session_2eproto::scc_info_DistributedPlan_Node.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:session.DistributedPlan.Node)
}
DistributedPlan_Node::DistributedPlan_Node(const DistributedPlan_Node& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_addr().size() > 0) {
    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:session.DistributedPlan.Node)
}

void DistributedPlan_Node::SharedCtor() {
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
}

DistributedPlan_Node::~DistributedPlan_Node() {
  // @@protoc_insertion_point(destructor:session.DistributedPlan.Node)
  SharedDtor();
}

void DistributedPlan_Node::SharedDtor() {
  ip_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DistributedPlan_Node::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DistributedPlan_Node::descriptor() {
  ::protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DistributedPlan_Node& DistributedPlan_Node::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_session_2eproto::scc_info_DistributedPlan_Node.base);
  return *internal_default_instance();
}


void DistributedPlan_Node::Clear() {
// @@protoc_insertion_point(message_clear_start:session.DistributedPlan.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
  _internal_metadata_.Clear();
}

bool DistributedPlan_Node::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:session.DistributedPlan.Node)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "session.DistributedPlan.Node.ip_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:session.DistributedPlan.Node)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:session.DistributedPlan.Node)
  return false;
#undef DO_
}

void DistributedPlan_Node::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:session.DistributedPlan.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.DistributedPlan.Node.ip_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip_addr(), output);
  }

  // sint32 port = 2;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:session.DistributedPlan.Node)
}

::google::protobuf::uint8* DistributedPlan_Node::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:session.DistributedPlan.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "session.DistributedPlan.Node.ip_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip_addr(), target);
  }

  // sint32 port = 2;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:session.DistributedPlan.Node)
  return target;
}

size_t DistributedPlan_Node::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:session.DistributedPlan.Node)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip_addr = 1;
  if (this->ip_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_addr());
  }

  // sint32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DistributedPlan_Node::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:session.DistributedPlan.Node)
  GOOGLE_DCHECK_NE(&from, this);
  const DistributedPlan_Node* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DistributedPlan_Node>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:session.DistributedPlan.Node)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:session.DistributedPlan.Node)
    MergeFrom(*source);
  }
}

void DistributedPlan_Node::MergeFrom(const DistributedPlan_Node& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:session.DistributedPlan.Node)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip_addr().size() > 0) {

    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void DistributedPlan_Node::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:session.DistributedPlan.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DistributedPlan_Node::CopyFrom(const DistributedPlan_Node& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:session.DistributedPlan.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DistributedPlan_Node::IsInitialized() const {
  return true;
}

void DistributedPlan_Node::Swap(DistributedPlan_Node* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DistributedPlan_Node::InternalSwap(DistributedPlan_Node* other) {
  using std::swap;
  ip_addr_.Swap(&other->ip_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DistributedPlan_Node::GetMetadata() const {
  protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DistributedPlan::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DistributedPlan::kNodesFieldNumber;
const int DistributedPlan::kPlansFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DistributedPlan::DistributedPlan()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_session_2eproto::scc_info_ChildPlan.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:session.DistributedPlan)
}
DistributedPlan::DistributedPlan(const DistributedPlan& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      nodes_(from.nodes_),
      plans_(from.plans_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:session.DistributedPlan)
}

void DistributedPlan::SharedCtor() {
}

DistributedPlan::~DistributedPlan() {
  // @@protoc_insertion_point(destructor:session.DistributedPlan)
  SharedDtor();
}

void DistributedPlan::SharedDtor() {
}

void DistributedPlan::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DistributedPlan::descriptor() {
  ::protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DistributedPlan& DistributedPlan::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_session_2eproto::scc_info_ChildPlan.base);
  return *internal_default_instance();
}


void DistributedPlan::Clear() {
// @@protoc_insertion_point(message_clear_start:session.DistributedPlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_.Clear();
  plans_.Clear();
  _internal_metadata_.Clear();
}

bool DistributedPlan::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:session.DistributedPlan)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .session.DistributedPlan.Node nodes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .session.ChildPlan plans = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_plans()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:session.DistributedPlan)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:session.DistributedPlan)
  return false;
#undef DO_
}

void DistributedPlan::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:session.DistributedPlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .session.DistributedPlan.Node nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->nodes(static_cast<int>(i)),
      output);
  }

  // repeated .session.ChildPlan plans = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->plans_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->plans(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:session.DistributedPlan)
}

::google::protobuf::uint8* DistributedPlan::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:session.DistributedPlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .session.DistributedPlan.Node nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->nodes(static_cast<int>(i)), deterministic, target);
  }

  // repeated .session.ChildPlan plans = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->plans_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->plans(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:session.DistributedPlan)
  return target;
}

size_t DistributedPlan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:session.DistributedPlan)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .session.DistributedPlan.Node nodes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->nodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->nodes(static_cast<int>(i)));
    }
  }

  // repeated .session.ChildPlan plans = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->plans_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->plans(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DistributedPlan::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:session.DistributedPlan)
  GOOGLE_DCHECK_NE(&from, this);
  const DistributedPlan* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DistributedPlan>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:session.DistributedPlan)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:session.DistributedPlan)
    MergeFrom(*source);
  }
}

void DistributedPlan::MergeFrom(const DistributedPlan& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:session.DistributedPlan)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_.MergeFrom(from.nodes_);
  plans_.MergeFrom(from.plans_);
}

void DistributedPlan::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:session.DistributedPlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DistributedPlan::CopyFrom(const DistributedPlan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:session.DistributedPlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DistributedPlan::IsInitialized() const {
  return true;
}

void DistributedPlan::Swap(DistributedPlan* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DistributedPlan::InternalSwap(DistributedPlan* other) {
  using std::swap;
  CastToBase(&nodes_)->InternalSwap(CastToBase(&other->nodes_));
  CastToBase(&plans_)->InternalSwap(CastToBase(&other->plans_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DistributedPlan::GetMetadata() const {
  protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemotePlan::InitAsDefaultInstance() {
  ::session::_RemotePlan_default_instance_._instance.get_mutable()->child_ = const_cast< ::session::ChildPlan*>(
      ::session::ChildPlan::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemotePlan::kChildFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemotePlan::RemotePlan()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_session_2eproto::scc_info_RemotePlan.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:session.RemotePlan)
}
RemotePlan::RemotePlan(const RemotePlan& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_child()) {
    child_ = new ::session::ChildPlan(*from.child_);
  } else {
    child_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:session.RemotePlan)
}

void RemotePlan::SharedCtor() {
  child_ = NULL;
}

RemotePlan::~RemotePlan() {
  // @@protoc_insertion_point(destructor:session.RemotePlan)
  SharedDtor();
}

void RemotePlan::SharedDtor() {
  if (this != internal_default_instance()) delete child_;
}

void RemotePlan::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RemotePlan::descriptor() {
  ::protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemotePlan& RemotePlan::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_session_2eproto::scc_info_RemotePlan.base);
  return *internal_default_instance();
}


void RemotePlan::Clear() {
// @@protoc_insertion_point(message_clear_start:session.RemotePlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && child_ != NULL) {
    delete child_;
  }
  child_ = NULL;
  _internal_metadata_.Clear();
}

bool RemotePlan::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:session.RemotePlan)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .session.ChildPlan child = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_child()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:session.RemotePlan)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:session.RemotePlan)
  return false;
#undef DO_
}

void RemotePlan::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:session.RemotePlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .session.ChildPlan child = 1;
  if (this->has_child()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_child(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:session.RemotePlan)
}

::google::protobuf::uint8* RemotePlan::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:session.RemotePlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .session.ChildPlan child = 1;
  if (this->has_child()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_child(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:session.RemotePlan)
  return target;
}

size_t RemotePlan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:session.RemotePlan)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .session.ChildPlan child = 1;
  if (this->has_child()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *child_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemotePlan::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:session.RemotePlan)
  GOOGLE_DCHECK_NE(&from, this);
  const RemotePlan* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemotePlan>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:session.RemotePlan)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:session.RemotePlan)
    MergeFrom(*source);
  }
}

void RemotePlan::MergeFrom(const RemotePlan& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:session.RemotePlan)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_child()) {
    mutable_child()->::session::ChildPlan::MergeFrom(from.child());
  }
}

void RemotePlan::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:session.RemotePlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemotePlan::CopyFrom(const RemotePlan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:session.RemotePlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemotePlan::IsInitialized() const {
  return true;
}

void RemotePlan::Swap(RemotePlan* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemotePlan::InternalSwap(RemotePlan* other) {
  using std::swap;
  swap(child_, other->child_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RemotePlan::GetMetadata() const {
  protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_session_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

Session_Service::~Session_Service() {}

const ::google::protobuf::ServiceDescriptor* Session_Service::descriptor() {
  protobuf_session_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_session_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* Session_Service::GetDescriptor() {
  return descriptor();
}

void Session_Service::SQL_Transfer(::google::protobuf::RpcController* controller,
                         const ::session::SQL_Request*,
                         ::session::SQL_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SQL_Transfer() not implemented.");
  done->Run();
}

void Session_Service::SendRemotePlan(::google::protobuf::RpcController* controller,
                         const ::session::RemotePlan*,
                         ::session::Table*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SendRemotePlan() not implemented.");
  done->Run();
}

void Session_Service::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_session_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      SQL_Transfer(controller,
             ::google::protobuf::down_cast<const ::session::SQL_Request*>(request),
             ::google::protobuf::down_cast< ::session::SQL_Response*>(response),
             done);
      break;
    case 1:
      SendRemotePlan(controller,
             ::google::protobuf::down_cast<const ::session::RemotePlan*>(request),
             ::google::protobuf::down_cast< ::session::Table*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& Session_Service::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::session::SQL_Request::default_instance();
    case 1:
      return ::session::RemotePlan::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& Session_Service::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::session::SQL_Response::default_instance();
    case 1:
      return ::session::Table::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

Session_Service_Stub::Session_Service_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
Session_Service_Stub::Session_Service_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
Session_Service_Stub::~Session_Service_Stub() {
  if (owns_channel_) delete channel_;
}

void Session_Service_Stub::SQL_Transfer(::google::protobuf::RpcController* controller,
                              const ::session::SQL_Request* request,
                              ::session::SQL_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void Session_Service_Stub::SendRemotePlan(::google::protobuf::RpcController* controller,
                              const ::session::RemotePlan* request,
                              ::session::Table* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace session
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::session::Value* Arena::CreateMaybeMessage< ::session::Value >(Arena* arena) {
  return Arena::CreateInternal< ::session::Value >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::session::Tuple* Arena::CreateMaybeMessage< ::session::Tuple >(Arena* arena) {
  return Arena::CreateInternal< ::session::Tuple >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::session::Table* Arena::CreateMaybeMessage< ::session::Table >(Arena* arena) {
  return Arena::CreateInternal< ::session::Table >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::session::SQL_Request* Arena::CreateMaybeMessage< ::session::SQL_Request >(Arena* arena) {
  return Arena::CreateInternal< ::session::SQL_Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::session::SQL_Response* Arena::CreateMaybeMessage< ::session::SQL_Response >(Arena* arena) {
  return Arena::CreateInternal< ::session::SQL_Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::session::Expression* Arena::CreateMaybeMessage< ::session::Expression >(Arena* arena) {
  return Arena::CreateInternal< ::session::Expression >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::session::Col* Arena::CreateMaybeMessage< ::session::Col >(Arena* arena) {
  return Arena::CreateInternal< ::session::Col >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::session::Expr* Arena::CreateMaybeMessage< ::session::Expr >(Arena* arena) {
  return Arena::CreateInternal< ::session::Expr >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::session::BinaryMessage* Arena::CreateMaybeMessage< ::session::BinaryMessage >(Arena* arena) {
  return Arena::CreateInternal< ::session::BinaryMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::session::ChildPlan* Arena::CreateMaybeMessage< ::session::ChildPlan >(Arena* arena) {
  return Arena::CreateInternal< ::session::ChildPlan >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::session::ValuePlan* Arena::CreateMaybeMessage< ::session::ValuePlan >(Arena* arena) {
  return Arena::CreateInternal< ::session::ValuePlan >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::session::SeqScanPlan* Arena::CreateMaybeMessage< ::session::SeqScanPlan >(Arena* arena) {
  return Arena::CreateInternal< ::session::SeqScanPlan >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::session::TableGetPlan* Arena::CreateMaybeMessage< ::session::TableGetPlan >(Arena* arena) {
  return Arena::CreateInternal< ::session::TableGetPlan >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::session::FilterPlan* Arena::CreateMaybeMessage< ::session::FilterPlan >(Arena* arena) {
  return Arena::CreateInternal< ::session::FilterPlan >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::session::InsertPlan* Arena::CreateMaybeMessage< ::session::InsertPlan >(Arena* arena) {
  return Arena::CreateInternal< ::session::InsertPlan >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::session::DeletePlan* Arena::CreateMaybeMessage< ::session::DeletePlan >(Arena* arena) {
  return Arena::CreateInternal< ::session::DeletePlan >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::session::UpdatePlan* Arena::CreateMaybeMessage< ::session::UpdatePlan >(Arena* arena) {
  return Arena::CreateInternal< ::session::UpdatePlan >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::session::ProjectionPlan* Arena::CreateMaybeMessage< ::session::ProjectionPlan >(Arena* arena) {
  return Arena::CreateInternal< ::session::ProjectionPlan >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::session::NestedLoopJoin* Arena::CreateMaybeMessage< ::session::NestedLoopJoin >(Arena* arena) {
  return Arena::CreateInternal< ::session::NestedLoopJoin >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::session::DistributedPlan_Node* Arena::CreateMaybeMessage< ::session::DistributedPlan_Node >(Arena* arena) {
  return Arena::CreateInternal< ::session::DistributedPlan_Node >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::session::DistributedPlan* Arena::CreateMaybeMessage< ::session::DistributedPlan >(Arena* arena) {
  return Arena::CreateInternal< ::session::DistributedPlan >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::session::RemotePlan* Arena::CreateMaybeMessage< ::session::RemotePlan >(Arena* arena) {
  return Arena::CreateInternal< ::session::RemotePlan >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
