syntax="proto3";
package meta_service;

//要实现的是各个节点向meta server发起调用请求来获取所需要分区的id和Location

option cc_generic_services = true;

message PartionkeyNameRequest {
    string db_name = 1;
    string tab_name = 2;
};

message PartionkeyNameResponse {
    string partition_key_name = 1;
};

message PartitionLocationRequest {
    string db_name = 1;
    string tab_name = 2;
    string partition_key_name = 3;
    message IntRange
    {
        int64 min_range = 1;
        int64 max_range = 2;
    }
    message StringRange
    {
        string min_range = 1;
        string max_range = 2;
    }
    oneof partition_range{
        IntRange int_partition_range = 4;
        StringRange string_partition_range = 5;
    }
};

// enum Role{
//     INVALID_ROLE = 0;
//     Leader = 1;
//     Follower = 2;
// };

message PartitionLocationResponse {
    // sint32 partition_cnt = 1;
    message ReplicaLocation
    {
        string ip_addr = 1;
        sint32 port = 2;
    };
    // repeated sint32 p_id = 2;
    // repeated ReplicaLocation partition_location = 3;
    map<sint32, ReplicaLocation> pid_partition_location = 2;
};

service MetaService {
    rpc GetPartitionKey(PartionkeyNameRequest) returns (PartionkeyNameResponse);
    rpc GetPartitionLocation(PartitionLocationRequest) returns (PartitionLocationResponse);
};